"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[13919],{13919:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var a=n(96540),s=n.n(a),r=n(71181),o=n(84976),l=n(42644),i=n(58027),m=n(90956);const c=()=>s().createElement(r.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto p-6"},s().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"Performance Optimization Hooks"),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Understanding Performance Hooks"),s().createElement("p",{className:"text-gray-600 mb-4"},"React's performance hooks help optimize rendering and computation in your components, ensuring smooth user experiences even with complex UI updates."),s().createElement("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4"},s().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},s().createElement(l.FrA,{className:"text-2xl text-blue-600 mb-2"}),s().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Memoization"),s().createElement("p",{className:"text-gray-600"},"Cache expensive computations")),s().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},s().createElement(l.Ojn,{className:"text-2xl text-blue-600 mb-2"}),s().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Transitions"),s().createElement("p",{className:"text-gray-600"},"Prioritize UI updates")),s().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},s().createElement(l.PjK,{className:"text-2xl text-blue-600 mb-2"}),s().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Deferred Values"),s().createElement("p",{className:"text-gray-600"},"Defer non-critical updates")))),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"useMemo Hook"),s().createElement("p",{className:"text-gray-600 mb-4"},"The useMemo hook memoizes expensive computations, preventing unnecessary recalculations when dependencies haven't changed."),s().createElement(i.A,{language:"jsx",style:m.A,className:"rounded-lg"},"// useMemo Hook\nimport React, { useState, useMemo } from 'react';\n\nfunction ExpensiveComponent({ data, filter }) {\n  // Memoize expensive calculation\n  const filteredData = useMemo(() => {\n    console.log('Filtering data...');\n    return data.filter(item => \n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }, [data, filter]); // Only recompute if data or filter changes\n\n  return (\n    <ul>\n      {filteredData.map(item => (\n        <li key={item.id}>{item.name}</li>\n      ))}\n    </ul>\n  );\n}\n\n// Example with complex calculations\nfunction DataAnalytics({ numbers }) {\n  const stats = useMemo(() => {\n    console.log('Computing statistics...');\n    return {\n      average: numbers.reduce((a, b) => a + b, 0) / numbers.length,\n      max: Math.max(...numbers),\n      min: Math.min(...numbers),\n      sum: numbers.reduce((a, b) => a + b, 0)\n    };\n  }, [numbers]);\n\n  return (\n    <div>\n      <p>Average: {stats.average}</p>\n      <p>Maximum: {stats.max}</p>\n      <p>Minimum: {stats.min}</p>\n      <p>Sum: {stats.sum}</p>\n    </div>\n  );\n}")),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"useCallback Hook"),s().createElement("p",{className:"text-gray-600 mb-4"},"The useCallback hook memoizes callback functions, preventing unnecessary re-renders of child components that depend on these functions."),s().createElement(i.A,{language:"jsx",style:m.A,className:"rounded-lg"},"// useCallback Hook\nimport React, { useState, useCallback } from 'react';\n\nfunction SearchComponent({ onSearch }) {\n  // Memoize callback function\n  const handleSearch = useCallback((searchTerm) => {\n    console.log('Searching:', searchTerm);\n    onSearch(searchTerm);\n  }, [onSearch]); // Only recreate if onSearch changes\n\n  return <SearchInput onSearch={handleSearch} />;\n}\n\n// Example with event handlers\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = useCallback((text) => {\n    setTodos(prevTodos => [\n      ...prevTodos,\n      { id: Date.now(), text }\n    ]);\n  }, []); // Empty deps array as it doesn't depend on props/state\n\n  const removeTodo = useCallback((id) => {\n    setTodos(prevTodos =>\n      prevTodos.filter(todo => todo.id !== id)\n    );\n  }, []);\n\n  const toggleTodo = useCallback((id) => {\n    setTodos(prevTodos =>\n      prevTodos.map(todo =>\n        todo.id === id\n          ? { ...todo, completed: !todo.completed }\n          : todo\n      )\n    );\n  }, []);\n\n  return (\n    <div>\n      <AddTodoForm onAdd={addTodo} />\n      <TodoItems\n        todos={todos}\n        onRemove={removeTodo}\n        onToggle={toggleTodo}\n      />\n    </div>\n  );\n}")),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"useTransition Hook"),s().createElement("p",{className:"text-gray-600 mb-4"},"The useTransition hook helps manage state transitions by marking updates as non-urgent, allowing urgent updates to take priority."),s().createElement(i.A,{language:"jsx",style:m.A,className:"rounded-lg"},"// useTransition Hook\nimport React, { useState, useTransition } from 'react';\n\nfunction SearchableList({ items }) {\n  const [query, setQuery] = useState('');\n  const [isPending, startTransition] = useTransition();\n\n  const handleChange = (e) => {\n    // Urgent update: Update input immediately\n    setQuery(e.target.value);\n\n    // Non-urgent update: Filter list with transition\n    startTransition(() => {\n      setFilteredItems(\n        items.filter(item =>\n          item.toLowerCase().includes(e.target.value.toLowerCase())\n        )\n      );\n    });\n  };\n\n  return (\n    <div>\n      <input\n        value={query}\n        onChange={handleChange}\n        placeholder=\"Search...\"\n      />\n      {isPending ? (\n        <div>Loading...</div>\n      ) : (\n        <ul>\n          {filteredItems.map(item => (\n            <li key={item}>{item}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\n// Example with tab switching\nfunction TabContainer() {\n  const [isPending, startTransition] = useTransition();\n  const [tab, setTab] = useState('home');\n\n  const selectTab = (nextTab) => {\n    startTransition(() => {\n      setTab(nextTab);\n    });\n  };\n\n  return (\n    <div>\n      <TabButtons onSelect={selectTab} />\n      <div style={{ opacity: isPending ? 0.8 : 1 }}>\n        {tab === 'home' && <HomeTab />}\n        {tab === 'posts' && <PostsTab />}\n        {tab === 'contact' && <ContactTab />}\n      </div>\n    </div>\n  );\n}")),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"useDeferredValue Hook"),s().createElement("p",{className:"text-gray-600 mb-4"},"The useDeferredValue hook creates a deferred version of a value that can lag behind the main value, useful for deferring expensive re-renders."),s().createElement(i.A,{language:"jsx",style:m.A,className:"rounded-lg"},"// useDeferredValue Hook\nimport React, { useState, useDeferredValue } from 'react';\n\nfunction SearchResults({ query }) {\n  // Defer updating the search results\n  const deferredQuery = useDeferredValue(query);\n\n  // This will use the deferred value\n  const searchResults = useMemo(\n    () => computeSearchResults(deferredQuery),\n    [deferredQuery]\n  );\n\n  return (\n    <div style={{\n      opacity: query !== deferredQuery ? 0.8 : 1,\n      transition: 'opacity 0.2s'\n    }}>\n      {searchResults.map(result => (\n        <SearchResult key={result.id} data={result} />\n      ))}\n    </div>\n  );\n}\n\n// Example with list rendering\nfunction VirtualList({ items }) {\n  const [visibleItems, setVisibleItems] = useState(items.slice(0, 100));\n  const deferredItems = useDeferredValue(visibleItems);\n\n  // Scroll handler updates visible items immediately\n  const handleScroll = (e) => {\n    const newVisibleItems = computeVisibleItems(items, e.target.scrollTop);\n    setVisibleItems(newVisibleItems);\n  };\n\n  return (\n    <div onScroll={handleScroll}>\n      {deferredItems.map(item => (\n        <ListItem key={item.id} data={item} />\n      ))}\n    </div>\n  );\n}")),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Performance Hooks Best Practices"),s().createElement("div",{className:"bg-white shadow-md rounded-lg p-6"},s().createElement("ul",{className:"list-disc list-inside space-y-3 text-gray-600"},s().createElement("li",null,"Only memoize expensive computations"),s().createElement("li",null,"Use appropriate dependency arrays"),s().createElement("li",null,"Profile before optimizing"),s().createElement("li",null,"Consider the cost of memoization"),s().createElement("li",null,"Use transitions for non-urgent updates"),s().createElement("li",null,"Implement proper error boundaries"),s().createElement("li",null,"Monitor performance metrics")))),s().createElement("div",{className:"bg-blue-50 border-l-4 border-blue-500 p-4 my-8"},s().createElement("h3",{className:"text-lg font-semibold text-blue-800 mb-2"},"Pro Tips"),s().createElement("ul",{className:"list-disc list-inside space-y-2 text-blue-700"},s().createElement("li",null,"Use React DevTools Profiler"),s().createElement("li",null,"Measure performance impact"),s().createElement("li",null,"Consider code splitting"),s().createElement("li",null,"Optimize rendering strategies"))),s().createElement("div",{className:"mt-12 flex justify-between items-center"},s().createElement(o.N_,{to:"/react-course/custom-hooks",className:"text-blue-600 hover:text-blue-800 flex items-center"},s().createElement(l.PjK,{className:"mr-2"})," Previous: Custom Hooks"),s().createElement(o.N_,{to:"/react-course/state-management",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center"},"Next: State Management ",s().createElement(l.PjK,{className:"ml-2"}))))}}]);