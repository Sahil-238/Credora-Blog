"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[2559],{2559:(e,t,a)=>{a.r(t),a.d(t,{default:()=>c});var n=a(96540),l=a.n(n),o=a(71181),s=a(84976);const c=()=>l().createElement(o.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto p-6"},l().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"Hooks Introduction"),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"What are Hooks?"),l().createElement("p",{className:"text-gray-600 mb-4"},"Hooks are functions introduced in React 16.8 that let you use state and other React features in functional components. Before hooks, only class components could manage state and lifecycle methods."),l().createElement("p",{className:"text-gray-600"},"With Hooks, you can now write cleaner, more readable, and reusable functional components without the need for class-based syntax.")),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Why Hooks?"),l().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},l().createElement("li",null,"Eliminates the need for class components."),l().createElement("li",null,"Allows logic to be reused across components using custom hooks."),l().createElement("li",null,"Makes code easier to read and test."),l().createElement("li",null,"Improves separation of concerns in components."))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Rules of Hooks"),l().createElement("ul",{className:"list-decimal list-inside text-gray-600 space-y-2"},l().createElement("li",null,"Only call Hooks at the top level of your component or your own custom hooks."),l().createElement("li",null,"Only call Hooks from React function components or custom hooks (not regular JavaScript functions)."))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Types of Hooks"),l().createElement("p",{className:"text-gray-600 mb-2"},"React provides several built-in hooks, including:"),l().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-1"},l().createElement("li",null,l().createElement("code",null,"useState")," – to manage state in functional components"),l().createElement("li",null,l().createElement("code",null,"useEffect")," – to perform side effects like data fetching"),l().createElement("li",null,l().createElement("code",null,"useContext")," – to access context values"),l().createElement("li",null,l().createElement("code",null,"useRef")," – to access DOM elements or persist values"),l().createElement("li",null,l().createElement("code",null,"useMemo")," and ",l().createElement("code",null,"useCallback")," – for performance optimizations"))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Simple Hook Example"),l().createElement("p",{className:"text-gray-600 mb-4"},"Here’s a basic example using the ",l().createElement("code",null,"useState")," hook:"),l().createElement("div",{className:"bg-gray-100 p-4 rounded-lg text-sm font-mono text-gray-800 overflow-x-auto"},"import React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n\nexport default Counter;"),l().createElement("p",{className:"text-gray-600 mt-4"},"In this example, ",l().createElement("code",null,"useState")," returns an array with the current state value (`count`) and a function to update it (`setCount`).")),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Conclusion"),l().createElement("p",{className:"text-gray-600"},"Hooks are a game-changer in React development. They make components more concise, testable, and reusable. Throughout this course, we’ll dive deeper into each hook and understand when and how to use them effectively.")),l().createElement("div",{className:"mt-12 flex justify-between items-center"},l().createElement(s.N_,{to:"/react-course",className:"text-blue-600 hover:text-blue-800"},"← Previous"),l().createElement(s.N_,{to:"/react-course/useState",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"},"Next →")))}}]);