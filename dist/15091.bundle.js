"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[15091],{15091:(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});var a=n(96540),l=n.n(a),o=n(71181),s=n(84976),r=n(58027),c=n(82355);const m=()=>l().createElement(o.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto p-6"},l().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"Context API"),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Understanding Context API"),l().createElement("p",{className:"text-gray-600 mb-4"},'The Context API provides a way to pass data through the component tree without having to pass props manually at every level. It\'s designed to share data that can be considered "global" for a tree of React components.'),l().createElement("div",{className:"bg-blue-50 border-l-4 border-blue-500 p-4 mb-6"},l().createElement("p",{className:"text-blue-700"},l().createElement("strong",null,"Key Concept:")," Context provides a way to share values between components without explicitly passing a prop through every level of the tree."))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Creating and Providing Context"),l().createElement("p",{className:"text-gray-600 mb-4"},"To create a context, you use the createContext function and wrap your component tree with a Provider component. Here's an example of a theme context implementation."),l().createElement("div",{className:"bg-gray-800 rounded-lg p-4 mb-6"},l().createElement(r.A,{language:"jsx",style:c.A},"// ThemeContext.js\nimport { createContext, useContext, useState } from 'react';\n\nconst ThemeContext = createContext(null);\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};"))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Using Context in Components"),l().createElement("p",{className:"text-gray-600 mb-4"},"Components can consume context using the useContext hook or Context.Consumer component. The useContext hook is the more modern and cleaner approach."),l().createElement("div",{className:"bg-gray-800 rounded-lg p-4 mb-6"},l().createElement(r.A,{language:"jsx",style:c.A},"// App.js\nconst App = () => {\n  return (\n    <ThemeProvider>\n      <Layout />\n    </ThemeProvider>\n  );\n};\n\n// Layout.js\nconst Layout = () => {\n  const { theme, toggleTheme } = useTheme();\n  \n  return (\n    <div className={`app ${theme}`}>\n      <button onClick={toggleTheme}>\n        Toggle {theme === 'light' ? 'Dark' : 'Light'} Mode\n      </button>\n      <Content />\n    </div>\n  );\n};"))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Multiple Contexts"),l().createElement("p",{className:"text-gray-600 mb-4"},"Applications often need multiple contexts for different types of data. You can nest context providers and consume multiple contexts in a single component."),l().createElement("div",{className:"bg-gray-800 rounded-lg p-4 mb-6"},l().createElement(r.A,{language:"jsx",style:c.A},"// Combining Multiple Contexts\nconst App = () => {\n  return (\n    <AuthProvider>\n      <ThemeProvider>\n        <LocaleProvider>\n          <Layout />\n        </LocaleProvider>\n      </ThemeProvider>\n    </AuthProvider>\n  );\n};\n\n// Using Multiple Contexts\nconst Header = () => {\n  const { user } = useAuth();\n  const { theme } = useTheme();\n  const { locale } = useLocale();\n\n  return (\n    <header className={`header ${theme}`}>\n      <h1>{translations[locale].welcome}</h1>\n      {user && <span>Welcome, {user.name}</span>}\n    </header>\n  );\n};"))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Context with Complex State"),l().createElement("p",{className:"text-gray-600 mb-4"},"When using context with complex state, it's important to structure your context value and update functions properly to maintain performance and prevent unnecessary rerenders."),l().createElement("div",{className:"bg-gray-800 rounded-lg p-4 mb-6"},l().createElement(r.A,{language:"jsx",style:c.A},"// Using Context with Complex State\nconst UserContext = createContext(null);\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [preferences, setPreferences] = useState({});\n\n  const updatePreferences = (newPrefs) => {\n    setPreferences(prev => ({\n      ...prev,\n      ...newPrefs\n    }));\n  };\n\n  const contextValue = {\n    user,\n    setUser,\n    preferences,\n    updatePreferences\n  };\n\n  return (\n    <UserContext.Provider value={contextValue}>\n      {children}\n    </UserContext.Provider>\n  );\n};"))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Best Practices"),l().createElement("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6"},l().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},l().createElement("h3",{className:"font-medium text-lg mb-4"},"When to Use Context"),l().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},l().createElement("li",null,"Theme data"),l().createElement("li",null,"User authentication"),l().createElement("li",null,"Language preferences"),l().createElement("li",null,"UI state that many components need"))),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},l().createElement("h3",{className:"font-medium text-lg mb-4"},"Context Pitfalls"),l().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},l().createElement("li",null,"Don't overuse for component composition"),l().createElement("li",null,"Be careful with frequent updates"),l().createElement("li",null,"Consider performance implications"),l().createElement("li",null,"Don't use just to avoid prop drilling"))))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Common Use Cases"),l().createElement("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4"},l().createElement("div",{className:"bg-gray-50 p-4 rounded-lg"},l().createElement("h3",{className:"font-medium mb-2"},"Theming"),l().createElement("p",{className:"text-sm text-gray-600"},"Dark/light mode, custom themes")),l().createElement("div",{className:"bg-gray-50 p-4 rounded-lg"},l().createElement("h3",{className:"font-medium mb-2"},"Authentication"),l().createElement("p",{className:"text-sm text-gray-600"},"User session, permissions")),l().createElement("div",{className:"bg-gray-50 p-4 rounded-lg"},l().createElement("h3",{className:"font-medium mb-2"},"Localization"),l().createElement("p",{className:"text-sm text-gray-600"},"Language, formatting")))),l().createElement("div",{className:"mt-12 flex justify-between items-center"},l().createElement(s.N_,{to:"/react-course/navigation",className:"text-blue-600 hover:text-blue-800"},"← Navigation"),l().createElement(s.N_,{to:"/react-course/redux-basics",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"},"Next: Redux Basics →")))},82355:(e,t,n)=>{n.d(t,{A:()=>a});const a={hljs:{display:"block",overflowX:"auto",padding:"0.5em",color:"#abb2bf",background:"#282c34"},"hljs-comment":{color:"#5c6370",fontStyle:"italic"},"hljs-quote":{color:"#5c6370",fontStyle:"italic"},"hljs-doctag":{color:"#c678dd"},"hljs-keyword":{color:"#c678dd"},"hljs-formula":{color:"#c678dd"},"hljs-section":{color:"#e06c75"},"hljs-name":{color:"#e06c75"},"hljs-selector-tag":{color:"#e06c75"},"hljs-deletion":{color:"#e06c75"},"hljs-subst":{color:"#e06c75"},"hljs-literal":{color:"#56b6c2"},"hljs-string":{color:"#98c379"},"hljs-regexp":{color:"#98c379"},"hljs-addition":{color:"#98c379"},"hljs-attribute":{color:"#98c379"},"hljs-meta-string":{color:"#98c379"},"hljs-built_in":{color:"#e6c07b"},"hljs-class .hljs-title":{color:"#e6c07b"},"hljs-attr":{color:"#d19a66"},"hljs-variable":{color:"#d19a66"},"hljs-template-variable":{color:"#d19a66"},"hljs-type":{color:"#d19a66"},"hljs-selector-class":{color:"#d19a66"},"hljs-selector-attr":{color:"#d19a66"},"hljs-selector-pseudo":{color:"#d19a66"},"hljs-number":{color:"#d19a66"},"hljs-symbol":{color:"#61aeee"},"hljs-bullet":{color:"#61aeee"},"hljs-link":{color:"#61aeee",textDecoration:"underline"},"hljs-meta":{color:"#61aeee"},"hljs-selector-id":{color:"#61aeee"},"hljs-title":{color:"#61aeee"},"hljs-emphasis":{fontStyle:"italic"},"hljs-strong":{fontWeight:"bold"}}}}]);