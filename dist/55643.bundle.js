"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[55643],{55643:(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});var a=n(96540),o=n.n(a),s=n(71181),r=n(84976),i=n(42644),l=n(58027),c=n(90956);const m=()=>o().createElement(s.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto p-6"},o().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"Advanced Routing Concepts"),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Lazy Loading Routes"),o().createElement("p",{className:"text-gray-600 mb-4"},"Lazy loading routes is a powerful optimization technique that allows you to split your application code into smaller chunks and load them on demand."),o().createElement("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4"},o().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},o().createElement(i.s_k,{className:"text-2xl text-blue-600 mb-2"}),o().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Code Splitting"),o().createElement("p",{className:"text-gray-600"},"Split code by route")),o().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},o().createElement(i.pcC,{className:"text-2xl text-blue-600 mb-2"}),o().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Performance"),o().createElement("p",{className:"text-gray-600"},"Improved load times")),o().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},o().createElement(i.PjK,{className:"text-2xl text-blue-600 mb-2"}),o().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Suspense"),o().createElement("p",{className:"text-gray-600"},"Loading states"))),o().createElement(l.A,{language:"jsx",style:c.A,className:"rounded-lg mt-4"},"// Lazy loading routes\nimport React, { Suspense } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nconst Dashboard = React.lazy(() => import('./pages/Dashboard'));\nconst Settings = React.lazy(() => import('./pages/Settings'));\nconst Profile = React.lazy(() => import('./pages/Profile'));\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Routes>\n          <Route path=\"/\" element={<Layout />}>\n            <Route\n              path=\"dashboard/*\"\n              element={\n                <Suspense fallback={<DashboardLoader />}>\n                  <Dashboard />\n                </Suspense>\n              }\n            />\n            <Route\n              path=\"settings\"\n              element={\n                <Suspense fallback={<SettingsLoader />}>\n                  <Settings />\n                </Suspense>\n              }\n            />\n            <Route\n              path=\"profile\"\n              element={\n                <Suspense fallback={<ProfileLoader />}>\n                  <Profile />\n                </Suspense>\n              }\n            />\n          </Route>\n        </Routes>\n      </Suspense>\n    </BrowserRouter>\n  );\n}")),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Advanced Route Guards"),o().createElement("p",{className:"text-gray-600 mb-4"},"Implement sophisticated route protection with role-based and permission-based access control."),o().createElement(l.A,{language:"jsx",style:c.A,className:"rounded-lg"},'// Advanced route protection\nimport { Navigate, useLocation } from \'react-router-dom\';\n\n// Role-based route guard\nfunction RoleGuard({ children, requiredRoles }) {\n  const { user } = useAuth();\n  const location = useLocation();\n\n  if (!user) {\n    return <Navigate to="/login" state={{ from: location }} replace />;\n  }\n\n  if (!requiredRoles.some(role => user.roles.includes(role))) {\n    return <Navigate to="/unauthorized" replace />;\n  }\n\n  return children;\n}\n\n// Permission-based route guard\nfunction PermissionGuard({ children, requiredPermissions }) {\n  const { user } = useAuth();\n  const location = useLocation();\n\n  if (!user) {\n    return <Navigate to="/login" state={{ from: location }} replace />;\n  }\n\n  const hasPermissions = requiredPermissions.every(\n    permission => user.permissions.includes(permission)\n  );\n\n  if (!hasPermissions) {\n    return <Navigate to="/unauthorized" replace />;\n  }\n\n  return children;\n}\n\n// Usage in routes\nfunction App() {\n  return (\n    <Routes>\n      <Route path="/" element={<Layout />}>\n        <Route\n          path="admin/*"\n          element={\n            <RoleGuard requiredRoles={[\'admin\']}>\n              <AdminPanel />\n            </RoleGuard>\n          }\n        />\n        <Route\n          path="reports"\n          element={\n            <PermissionGuard\n              requiredPermissions={[\'view_reports\', \'download_reports\']}\n            >\n              <Reports />\n            </PermissionGuard>\n          }\n        />\n      </Route>\n    </Routes>\n  );\n}')),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Route Data Loading"),o().createElement("p",{className:"text-gray-600 mb-4"},"React Router provides powerful data loading capabilities with loaders and suspense boundaries."),o().createElement(l.A,{language:"jsx",style:c.A,className:"rounded-lg"},"// Data loading with routes\nimport { useLoaderData, defer, Await } from 'react-router-dom';\n\n// Loader function\nasync function dashboardLoader() {\n  return defer({\n    stats: fetchDashboardStats(),\n    recentActivity: fetchRecentActivity(),\n    notifications: fetchNotifications()\n  });\n}\n\n// Component with suspense boundaries\nfunction Dashboard() {\n  const data = useLoaderData();\n\n  return (\n    <div>\n      <Suspense fallback={<StatsLoader />}>\n        <Await\n          resolve={data.stats}\n          errorElement={<StatsError />}\n        >\n          {(stats) => <DashboardStats stats={stats} />}\n        </Await>\n      </Suspense>\n\n      <Suspense fallback={<ActivityLoader />}>\n        <Await\n          resolve={data.recentActivity}\n          errorElement={<ActivityError />}\n        >\n          {(activity) => <RecentActivity data={activity} />}\n        </Await>\n      </Suspense>\n\n      <Suspense fallback={<NotificationsLoader />}>\n        <Await\n          resolve={data.notifications}\n          errorElement={<NotificationsError />}\n        >\n          {(notifications) => (\n            <Notifications data={notifications} />\n          )}\n        </Await>\n      </Suspense>\n    </div>\n  );\n}\n\n// Route configuration\nconst router = createBrowserRouter([\n  {\n    path: \"/dashboard\",\n    element: <Dashboard />,\n    loader: dashboardLoader,\n    errorElement: <DashboardError />\n  }\n]);")),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Custom Routing Patterns"),o().createElement("p",{className:"text-gray-600 mb-4"},"Implement custom routing behaviors like modal routes, breadcrumb navigation, and animated transitions."),o().createElement(l.A,{language:"jsx",style:c.A,className:"rounded-lg"},"// Custom routing behavior\nimport { useNavigate, useLocation } from 'react-router-dom';\n\n// Modal routing\nfunction ModalRoute({ children }) {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const background = location.state?.background;\n\n  return (\n    <div className=\"modal\">\n      {children}\n      <button onClick={() => navigate(background ?? '/')}>\n        Close\n      </button>\n    </div>\n  );\n}\n\n// Breadcrumb navigation\nfunction BreadcrumbRoute({ children }) {\n  const location = useLocation();\n  const paths = location.pathname.split('/')\n    .filter(Boolean);\n\n  return (\n    <div>\n      <nav>\n        <Link to=\"/\">Home</Link>\n        {paths.map((path, index) => {\n          const to = `/${paths.slice(0, index + 1).join('/')}`;\n          return (\n            <Link key={to} to={to}>\n              {path}\n            </Link>\n          );\n        })}\n      </nav>\n      {children}\n    </div>\n  );\n}\n\n// Animated route transitions\nfunction AnimatedRoute({ children }) {\n  const location = useLocation();\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      <motion.div\n        key={location.pathname}\n        initial={{ opacity: 0, x: 20 }}\n        animate={{ opacity: 1, x: 0 }}\n        exit={{ opacity: 0, x: -20 }}\n      >\n        {children}\n      </motion.div>\n    </AnimatePresence>\n  );\n}")),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Advanced Routing Best Practices"),o().createElement("div",{className:"bg-white shadow-md rounded-lg p-6"},o().createElement("ul",{className:"list-disc list-inside space-y-3 text-gray-600"},o().createElement("li",null,"Implement proper code splitting"),o().createElement("li",null,"Use route-based chunking"),o().createElement("li",null,"Handle loading states gracefully"),o().createElement("li",null,"Implement proper error boundaries"),o().createElement("li",null,"Use route-based data prefetching"),o().createElement("li",null,"Consider route-based code optimization"),o().createElement("li",null,"Implement proper route transitions")))),o().createElement("div",{className:"bg-blue-50 border-l-4 border-blue-500 p-4 my-8"},o().createElement("h3",{className:"text-lg font-semibold text-blue-800 mb-2"},"Pro Tips"),o().createElement("ul",{className:"list-disc list-inside space-y-2 text-blue-700"},o().createElement("li",null,"Use route-based code splitting wisely"),o().createElement("li",null,"Implement proper loading indicators"),o().createElement("li",null,"Consider route-based prefetching"),o().createElement("li",null,"Use route metadata for analytics"))),o().createElement("div",{className:"mt-12 flex justify-between items-center"},o().createElement(r.N_,{to:"/react-course/basic-routing",className:"text-blue-600 hover:text-blue-800 flex items-center"},o().createElement(i.PjK,{className:"mr-2"})," Previous: Basic Routing"),o().createElement(r.N_,{to:"/react-course/hooks",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center"},"Next: React Hooks ",o().createElement(i.PjK,{className:"ml-2"}))))}}]);