"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[60994],{60994:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var s=n(96540),o=n.n(s),r=n(71181),a=n(84976),l=n(42644);const c=()=>o().createElement(r.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto p-6"},o().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"OS Module in Node.js"),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Introduction to OS Module"),o().createElement("p",{className:"text-gray-600 mb-4"},"The OS module in Node.js provides operating system-related utility methods and properties. It allows you to interact with the operating system and retrieve information about the system's resources, memory, CPUs, and more."),o().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},o().createElement("div",{className:"flex items-start"},o().createElement(l.Ojn,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),o().createElement("div",null,o().createElement("h3",{className:"font-semibold mb-2"},"Key Features"),o().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},o().createElement("li",null,"System information retrieval"),o().createElement("li",null,"Memory usage statistics"),o().createElement("li",null,"CPU information and load"),o().createElement("li",null,"Network interfaces"),o().createElement("li",null,"User information"),o().createElement("li",null,"Operating system constants")))))),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"System Information"),o().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},o().createElement("div",{className:"flex items-start"},o().createElement(l.S8s,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),o().createElement("div",null,o().createElement("p",{className:"text-gray-600 mb-4"},"Get basic information about the operating system:"),o().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"const os = require('os');\n\n// OS platform and architecture\nconsole.log('Platform:', os.platform());    // 'darwin', 'win32', 'linux'\nconsole.log('Architecture:', os.arch());    // 'x64', 'arm', etc.\n\n// OS information\nconsole.log('OS Type:', os.type());         // 'Windows_NT', 'Darwin', 'Linux'\nconsole.log('OS Release:', os.release());   // Version of the operating system\nconsole.log('OS Version:', os.version());   // Kernel version\n\n// System uptime\nconsole.log('Uptime:', os.uptime());       // System uptime in seconds\n\n// Host name\nconsole.log('Hostname:', os.hostname());    // Computer's network name\n\n// End-of-line marker\nconsole.log('EOL:', os.EOL);               // \\n or \\r\\n\n\n// OS constants\nconsole.log('Constants:', os.constants);    // Operating system constants"))))),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Memory Information"),o().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},o().createElement("div",{className:"flex items-start"},o().createElement(l.nOB,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),o().createElement("div",null,o().createElement("p",{className:"text-gray-600 mb-4"},"Access information about system memory:"),o().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"const os = require('os');\n\n// Total system memory\nconsole.log('Total Memory:', os.totalmem());\nconsole.log('Total Memory (GB):', os.totalmem() / 1024 / 1024 / 1024);\n\n// Free system memory\nconsole.log('Free Memory:', os.freemem());\nconsole.log('Free Memory (GB):', os.freemem() / 1024 / 1024 / 1024);\n\n// Memory usage monitoring\nfunction getMemoryUsage() {\n  const total = os.totalmem();\n  const free = os.freemem();\n  const used = total - free;\n  const usedPercentage = (used / total) * 100;\n\n  return {\n    total: total / 1024 / 1024 / 1024,    // GB\n    free: free / 1024 / 1024 / 1024,      // GB\n    used: used / 1024 / 1024 / 1024,      // GB\n    usedPercentage: usedPercentage.toFixed(2)\n  };\n}\n\nconsole.log('Memory Usage:', getMemoryUsage());"))))),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"CPU Information"),o().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},o().createElement("div",{className:"flex items-start"},o().createElement(l.Ojn,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),o().createElement("div",null,o().createElement("p",{className:"text-gray-600 mb-4"},"Get information about the system's CPUs:"),o().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"const os = require('os');\n\n// Get CPU information\nconst cpus = os.cpus();\nconsole.log('Number of CPUs:', cpus.length);\n\n// CPU details\ncpus.forEach((cpu, index) => {\n  console.log(`CPU ${index + 1}:`);\n  console.log('  Model:', cpu.model);\n  console.log('  Speed:', cpu.speed, 'MHz');\n  console.log('  Times:', cpu.times);\n});\n\n// CPU architecture\nconsole.log('CPU Architecture:', os.arch());\n\n// Load average\nconsole.log('Load Average:', os.loadavg());\n// Returns [1min, 5min, 15min] load averages\n\n// CPU priority\nconst priority = os.getPriority();\nconsole.log('Process Priority:', priority);\n\n// Set process priority (requires appropriate permissions)\ntry {\n  os.setPriority(os.getPriority() - 1);\n  console.log('New Priority:', os.getPriority());\n} catch (err) {\n  console.error('Failed to set priority:', err);\n}"))))),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Network Interfaces"),o().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},o().createElement("div",{className:"space-y-4"},o().createElement("div",null,o().createElement("h3",{className:"font-semibold mb-2"},"Get Network Interface Information"),o().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"const os = require('os');\n\n// Get all network interfaces\nconst networkInterfaces = os.networkInterfaces();\n\n// Display network interface information\nObject.entries(networkInterfaces).forEach(([name, interfaces]) => {\n  console.log(`Interface: ${name}`);\n  interfaces.forEach(interface => {\n    console.log('  Address:', interface.address);\n    console.log('  Netmask:', interface.netmask);\n    console.log('  Family:', interface.family);\n    console.log('  MAC:', interface.mac);\n    console.log('  Internal:', interface.internal);\n    console.log('  CIDR:', interface.cidr);\n  });\n});\n\n// Filter for specific interface types\nfunction getIPv4Addresses() {\n  const interfaces = os.networkInterfaces();\n  const addresses = [];\n\n  Object.values(interfaces).forEach(ifaces => {\n    ifaces.forEach(iface => {\n      if (iface.family === 'IPv4' && !iface.internal) {\n        addresses.push(iface.address);\n      }\n    });\n  });\n\n  return addresses;\n}"))))),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"User Information"),o().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},o().createElement("div",{className:"flex items-start"},o().createElement(l.cfS,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),o().createElement("div",null,o().createElement("p",{className:"text-gray-600 mb-4"},"Access information about the current user and system users:"),o().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"const os = require('os');\n\n// Get current user info\nconst userInfo = os.userInfo();\nconsole.log('User Information:');\nconsole.log('  Username:', userInfo.username);\nconsole.log('  UID:', userInfo.uid);\nconsole.log('  GID:', userInfo.gid);\nconsole.log('  Home Directory:', userInfo.homedir);\nconsole.log('  Shell:', userInfo.shell);\n\n// Get home directory\nconsole.log('Home Directory:', os.homedir());\n\n// Get temporary directory\nconsole.log('Temp Directory:', os.tmpdir());\n\n// Current process user information\nconsole.log('Current UID:', process.getuid());\nconsole.log('Current GID:', process.getgid());\n\n// Check if running as root/admin\nfunction isRoot() {\n  return process.getuid && process.getuid() === 0;\n}"))))),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Best Practices"),o().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},o().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},o().createElement("li",null,"Cache system information that doesn't change frequently"),o().createElement("li",null,"Handle platform-specific differences"),o().createElement("li",null,"Use appropriate error handling for privileged operations"),o().createElement("li",null,"Consider memory usage when monitoring system resources"),o().createElement("li",null,"Be careful with CPU-intensive operations"),o().createElement("li",null,"Validate user permissions before system modifications"),o().createElement("li",null,"Use appropriate units for memory calculations"),o().createElement("li",null,"Consider cross-platform compatibility")))),o().createElement("div",{className:"mt-12 flex justify-between items-center"},o().createElement(a.N_,{to:"/nodejs-course/url-module",className:"text-blue-600 hover:text-blue-800"},"← URL Module"),o().createElement(a.N_,{to:"/nodejs-course/process",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"},"Next: Process →")))}}]);