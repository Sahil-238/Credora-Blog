"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[90352],{90352:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var a=n(96540),l=n.n(a),o=n(71181),s=n(84976),r=n(42644),m=n(58027),c=n(90956);const i=()=>l().createElement(o.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto p-6"},l().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"React Components"),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"What are Components?"),l().createElement("p",{className:"text-gray-600 mb-4"},"Components are the building blocks of React applications. They let you split the UI into independent, reusable pieces, and think about each piece in isolation."),l().createElement("div",{className:"bg-blue-50 border-l-4 border-blue-500 p-4 my-4"},l().createElement("p",{className:"text-blue-700"},'Components are like JavaScript functions. They accept arbitrary inputs (called "props") and return React elements describing what should appear on the screen.'))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Functional Components"),l().createElement("p",{className:"text-gray-600 mb-4"},"Functional components are the modern way to write React components. They are simple JavaScript functions that return JSX."),l().createElement(m.A,{language:"jsx",style:c.A,className:"rounded-lg"},'// Functional Component\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n\n// Arrow Function Component\nconst Welcome = (props) => {\n  return <h1>Hello, {props.name}</h1>;\n};\n\n// Usage\n<Welcome name="John" />')),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Class Components"),l().createElement("p",{className:"text-gray-600 mb-4"},"Class components are the traditional way to write React components. While still supported, functional components are now preferred."),l().createElement(m.A,{language:"jsx",style:c.A,className:"rounded-lg"},'// Class Component\nclass Welcome extends React.Component {\n  render() {\n    return <h1>Hello, {this.props.name}</h1>;\n  }\n}\n\n// Usage\n<Welcome name="John" />')),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Component Composition"),l().createElement("p",{className:"text-gray-600 mb-4"},"Components can refer to other components in their output. This lets us use the same component abstraction for any level of detail."),l().createElement(m.A,{language:"jsx",style:c.A,className:"rounded-lg"},"// Button Component\nfunction Button({ children, onClick, color = 'blue' }) {\n  return (\n    <button \n      onClick={onClick}\n      className={`bg-${color}-500 text-white px-4 py-2 rounded`}\n    >\n      {children}\n    </button>\n  );\n}\n\n// Card Component using Button\nfunction Card({ title, description }) {\n  return (\n    <div className=\"border p-4 rounded\">\n      <h2>{title}</h2>\n      <p>{description}</p>\n      <Button onClick={() => console.log('Clicked!')}>\n        Learn More\n      </Button>\n    </div>\n  );\n}")),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Pure Components"),l().createElement("p",{className:"text-gray-600 mb-4"},"A pure component always renders the same output for the same props and state. This makes components predictable and easier to debug."),l().createElement(m.A,{language:"jsx",style:c.A,className:"rounded-lg"},"// Pure Component\nfunction NumberDisplay(props) {\n  return <div>The number is: {props.number}</div>;\n}\n\n// Impure Component (Avoid this)\nfunction RandomNumber(props) {\n  return <div>Random: {Math.random()}</div>;\n}")),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Fragments"),l().createElement("p",{className:"text-gray-600 mb-4"},"Fragments let you group a list of children without adding extra nodes to the DOM."),l().createElement(m.A,{language:"jsx",style:c.A,className:"rounded-lg"},'// Using Fragments\nfunction UserInfo({ user }) {\n  return (\n    <>\n      <h1>{user.name}</h1>\n      <p>{user.bio}</p>\n    </>\n  );\n}\n\n// Long Syntax with Key\nfunction GroceryList() {\n  return (\n    <React.Fragment>\n      <li key="1">Apples</li>\n      <li key="2">Bananas</li>\n    </React.Fragment>\n  );\n}')),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Component Best Practices"),l().createElement("div",{className:"bg-white shadow-md rounded-lg p-6"},l().createElement("ul",{className:"list-disc list-inside space-y-3 text-gray-600"},l().createElement("li",null,"Keep components focused and single-responsibility"),l().createElement("li",null,"Use functional components with hooks instead of class components"),l().createElement("li",null,"Extract reusable logic into custom hooks"),l().createElement("li",null,"Use TypeScript for better type safety"),l().createElement("li",null,"Follow naming conventions (PascalCase for components)"),l().createElement("li",null,"Keep components small and manageable"),l().createElement("li",null,"Use prop-types or TypeScript for props validation")))),l().createElement("div",{className:"bg-blue-50 border-l-4 border-blue-500 p-4 my-8"},l().createElement("h3",{className:"text-lg font-semibold text-blue-800 mb-2"},"Pro Tips"),l().createElement("ul",{className:"list-disc list-inside space-y-2 text-blue-700"},l().createElement("li",null,"Use composition over inheritance"),l().createElement("li",null,"Implement error boundaries for better error handling"),l().createElement("li",null,"Use React.memo() for performance optimization when needed"),l().createElement("li",null,"Keep your components pure whenever possible"))),l().createElement("div",{className:"mt-12 flex justify-between items-center"},l().createElement(s.N_,{to:"/react-course/jsx",className:"text-blue-600 hover:text-blue-800 flex items-center"},l().createElement(r.aze,{className:"mr-2"})," Previous: JSX"),l().createElement(s.N_,{to:"/react-course/props",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center"},"Next: Props ",l().createElement(r.PjK,{className:"ml-2"}))))}}]);