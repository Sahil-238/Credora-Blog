"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[21135],{21135:(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});var a=n(96540),l=n.n(a),c=n(71181),s=n(42644),r=n(84976);const o=(0,a.createContext)("light"),m=()=>{const[e,t]=(0,a.useState)("context"),[n,m]=(0,a.useState)(!1),[i,d]=(0,a.useState)("light"),u={context:{title:"Context API",code:"const ThemeContext = createContext('light');\n\nfunction ThemeProvider({ children }) {\n  const [theme, setTheme] = useState('light');\n  \n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nfunction ThemedButton() {\n  const { theme, setTheme } = useContext(ThemeContext);\n  \n  return (\n    <button onClick={() => setTheme(theme === 'light' ? 'dark' : 'light')}>\n      Toggle Theme\n    </button>\n  );\n}",explanation:"Context provides a way to pass data through the component tree without prop drilling."},redux:{title:"Redux",code:"// Action Types\nconst INCREMENT = 'INCREMENT';\nconst DECREMENT = 'DECREMENT';\n\n// Action Creators\nconst increment = () => ({ type: INCREMENT });\nconst decrement = () => ({ type: DECREMENT });\n\n// Reducer\nconst counterReducer = (state = 0, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return state + 1;\n    case DECREMENT:\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\n// Component\nfunction Counter() {\n  const count = useSelector(state => state.counter);\n  const dispatch = useDispatch();\n  \n  return (\n    <div>\n      <button onClick={() => dispatch(decrement())}>-</button>\n      <span>{count}</span>\n      <button onClick={() => dispatch(increment())}>+</button>\n    </div>\n  );\n}",explanation:"Redux is a predictable state container for JavaScript apps."},zustand:{title:"Zustand",code:"import create from 'zustand';\n\nconst useStore = create((set) => ({\n  count: 0,\n  increment: () => set((state) => ({ count: state.count + 1 })),\n  decrement: () => set((state) => ({ count: state.count - 1 })),\n}));\n\nfunction Counter() {\n  const { count, increment, decrement } = useStore();\n  \n  return (\n    <div>\n      <button onClick={decrement}>-</button>\n      <span>{count}</span>\n      <button onClick={increment}>+</button>\n    </div>\n  );\n}",explanation:"Zustand is a small, fast and scalable state management solution."},recoil:{title:"Recoil",code:"import { atom, useRecoilState } from 'recoil';\n\nconst countState = atom({\n  key: 'countState',\n  default: 0,\n});\n\nfunction Counter() {\n  const [count, setCount] = useRecoilState(countState);\n  \n  return (\n    <div>\n      <button onClick={() => setCount(c => c - 1)}>-</button>\n      <span>{count}</span>\n      <button onClick={() => setCount(c => c + 1)}>+</button>\n    </div>\n  );\n}",explanation:"Recoil is a state management library that provides atomic model and derived data."}};return l().createElement(c.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto"},l().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"State Management"),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Understanding State Management"),l().createElement("p",{className:"text-gray-600 mb-4"},"As React applications grow, managing state becomes more complex. Different state management solutions offer various approaches to handle this complexity."),l().createElement("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4"},l().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},l().createElement(s.Hbo,{className:"text-2xl text-blue-600 mb-2"}),l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Local State"),l().createElement("p",{className:"text-gray-600"},"Component-level state with useState")),l().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},l().createElement(s.VeH,{className:"text-2xl text-blue-600 mb-2"}),l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Global State"),l().createElement("p",{className:"text-gray-600"},"Application-wide state management")),l().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},l().createElement(s.est,{className:"text-2xl text-blue-600 mb-2"}),l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"State Libraries"),l().createElement("p",{className:"text-gray-600"},"Third-party state management solutions")))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"State Management Solutions"),l().createElement("div",{className:"bg-white rounded-lg shadow overflow-hidden"},l().createElement("div",{className:"flex border-b overflow-x-auto"},Object.entries(u).map((n=>{let[a,c]=n;return l().createElement("button",{key:a,className:"px-6 py-3 whitespace-nowrap ".concat(e===a?"bg-blue-50 text-blue-600 border-b-2 border-blue-600":"text-gray-600 hover:bg-gray-50"),onClick:()=>t(a)},c.title)}))),l().createElement("div",{className:"p-6"},l().createElement("pre",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono text-sm mb-4"},u[e].code),l().createElement("p",{className:"text-gray-600"},u[e].explanation)))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Context API Demo"),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement(o.Provider,{value:{theme:i,setTheme:d}},l().createElement("div",{className:"space-y-4"},l().createElement("div",{className:"p-4 rounded transition-colors ".concat("light"===i?"bg-gray-100":"bg-gray-800 text-white")},l().createElement("p",null,"Current theme: ",i),l().createElement("button",{onClick:()=>d("light"===i?"dark":"light"),className:"mt-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors"},"Toggle Theme")),l().createElement("pre",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono text-sm"},"// Current theme context value\n{\n  theme: '".concat(i,"',\n  setTheme: Function\n}")))))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"When to Use What"),l().createElement("div",{className:"space-y-4"},l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Context API"),l().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},l().createElement("li",null,"Theme management"),l().createElement("li",null,"User authentication state"),l().createElement("li",null,"Localization"),l().createElement("li",null,"Small to medium applications"))),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Redux"),l().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},l().createElement("li",null,"Large applications"),l().createElement("li",null,"Complex state logic"),l().createElement("li",null,"Need for middleware"),l().createElement("li",null,"Time-travel debugging"))),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Zustand/Recoil"),l().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},l().createElement("li",null,"Modern alternatives to Redux"),l().createElement("li",null,"Simpler API"),l().createElement("li",null,"Better TypeScript support"),l().createElement("li",null,"Performance optimization"))))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Advanced Patterns"),l().createElement("button",{onClick:()=>m(!n),className:"mb-4 text-blue-600 hover:text-blue-800"},n?"Hide Advanced Patterns":"Show Advanced Patterns"),n&&l().createElement("div",{className:"space-y-4"},l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Redux Toolkit"),l().createElement("pre",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono text-sm"},"import { createSlice } from '@reduxjs/toolkit';\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: 0,\n  reducers: {\n    increment: state => state + 1,\n    decrement: state => state - 1\n  }\n});\n\nexport const { increment, decrement } = counterSlice.actions;\nexport default counterSlice.reducer;")),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Context with Reducer"),l().createElement("pre",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono text-sm"},"const initialState = { count: 0 };\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'increment':\n      return { count: state.count + 1 };\n    case 'decrement':\n      return { count: state.count - 1 };\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  \n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n}")))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Exercise"),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("p",{className:"text-gray-600 mb-4"},"Create a shopping cart application using Redux Toolkit with the following features:"),l().createElement("div",{className:"bg-gray-100 p-4 rounded"},l().createElement("p",{className:"text-gray-700 font-semibold"},"Requirements:"),l().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},l().createElement("li",null,"Product listing with add to cart functionality"),l().createElement("li",null,"Cart management (add, remove, update quantity)"),l().createElement("li",null,"Persist cart state in localStorage"),l().createElement("li",null,"Implement loading and error states"),l().createElement("li",null,"Add unit tests for reducers"))))),l().createElement("div",{className:"mt-12 flex justify-between items-center"},l().createElement(r.N_,{to:"/react-course/routing",className:"text-blue-600 hover:text-blue-800"},"← Previous: Routing"),l().createElement(r.N_,{to:"/react-course/performance",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"},"Next: Performance →")))}}}]);