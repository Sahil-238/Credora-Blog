"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[96482],{96482:(e,t,a)=>{a.r(t),a.d(t,{default:()=>m});var r=a(96540),n=a.n(r),l=a(71181);const m=()=>n().createElement(l.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto"},n().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"Pointers in C"),n().createElement("section",{className:"mb-8"},n().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"What are Pointers?"),n().createElement("p",{className:"text-gray-600 mb-4"},"Pointers are variables that store memory addresses of other variables. They are one of the most powerful features in C programming, allowing direct memory manipulation and efficient memory management."),n().createElement("div",{className:"bg-gray-800 text-white p-4 rounded-lg mb-4 font-mono"},n().createElement("pre",null,'int number = 42;     // Regular variable\nint* ptr = &number;  // Pointer variable storing address of \'number\'\n\nprintf("Value: %d\\n", number);     // Prints: 42\nprintf("Address: %p\\n", ptr);      // Prints: memory address\nprintf("Value at ptr: %d\\n", *ptr); // Prints: 42'))),n().createElement("section",{className:"mb-8"},n().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Pointer Operations"),n().createElement("div",{className:"grid md:grid-cols-2 gap-6"},n().createElement("div",{className:"bg-white p-6 rounded-lg shadow-md"},n().createElement("h3",{className:"text-lg font-medium text-gray-800 mb-3"},"Address Operator (&)"),n().createElement("p",{className:"text-gray-600 mb-3"},"Used to get the memory address of a variable."),n().createElement("div",{className:"bg-gray-800 text-white p-3 rounded font-mono"},n().createElement("pre",null,"int x = 10;\nint* ptr = &x;  // & gets address of x"))),n().createElement("div",{className:"bg-white p-6 rounded-lg shadow-md"},n().createElement("h3",{className:"text-lg font-medium text-gray-800 mb-3"},"Dereference Operator (*)"),n().createElement("p",{className:"text-gray-600 mb-3"},"Used to access the value at a pointer's address."),n().createElement("div",{className:"bg-gray-800 text-white p-3 rounded font-mono"},n().createElement("pre",null,"int* ptr = &x;\nint value = *ptr;  // * gets value at address"))))),n().createElement("section",{className:"mb-8"},n().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Common Uses of Pointers"),n().createElement("div",{className:"space-y-6"},n().createElement("div",{className:"bg-white p-6 rounded-lg shadow-md"},n().createElement("h3",{className:"text-lg font-medium text-gray-800 mb-3"},"Dynamic Memory Allocation"),n().createElement("div",{className:"bg-gray-800 text-white p-3 rounded font-mono"},n().createElement("pre",null,"int* arr = (int*)malloc(5 * sizeof(int));\n// Use the array\narr[0] = 1;\narr[1] = 2;\n// ...\nfree(arr);  // Don't forget to free!"))),n().createElement("div",{className:"bg-white p-6 rounded-lg shadow-md"},n().createElement("h3",{className:"text-lg font-medium text-gray-800 mb-3"},"Function Parameters"),n().createElement("div",{className:"bg-gray-800 text-white p-3 rounded font-mono"},n().createElement("pre",null,"void swap(int* a, int* b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\nint x = 5, y = 10;\nswap(&x, &y);  // Pass addresses"))),n().createElement("div",{className:"bg-white p-6 rounded-lg shadow-md"},n().createElement("h3",{className:"text-lg font-medium text-gray-800 mb-3"},"Array Operations"),n().createElement("div",{className:"bg-gray-800 text-white p-3 rounded font-mono"},n().createElement("pre",null,'int arr[] = {1, 2, 3, 4, 5};\nint* ptr = arr;  // Arrays decay to pointers\n\n// Array traversal using pointer\nfor(int i = 0; i < 5; i++) {\n    printf("%d ", *(ptr + i));\n}'))))),n().createElement("section",{className:"mb-8"},n().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Common Pitfalls"),n().createElement("div",{className:"bg-red-50 border-l-4 border-red-500 p-4 rounded"},n().createElement("h3",{className:"text-lg font-medium text-red-800 mb-2"},"⚠️ Watch out for:"),n().createElement("ul",{className:"list-disc list-inside space-y-2 text-red-700"},n().createElement("li",null,"Uninitialized pointers"),n().createElement("li",null,"Memory leaks (forgetting to free)"),n().createElement("li",null,"Dangling pointers"),n().createElement("li",null,"Buffer overflows"),n().createElement("li",null,"Null pointer dereferencing")))),n().createElement("div",{className:"mt-8 flex justify-end"},n().createElement("button",{onClick:()=>window.scrollTo(0,0),className:"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors"},"Back to Top")))}}]);