"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[51389],{51389:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var s=n(96540),r=n.n(s),a=n(71181),l=n(84976),m=n(42644);const i=()=>r().createElement(a.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto p-6"},r().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"Events in Node.js"),r().createElement("section",{className:"mb-8"},r().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Event-Driven Programming"),r().createElement("p",{className:"text-gray-600 mb-4"},'Node.js uses an event-driven architecture where certain types of objects (called "emitters") emit named events that cause listeners (functions) to be called. This pattern is the backbone of Node.js\'s non-blocking I/O operations.'),r().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},r().createElement("div",{className:"flex items-start"},r().createElement(m.DQs,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),r().createElement("div",null,r().createElement("h3",{className:"font-semibold mb-2"},"Key Concepts"),r().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},r().createElement("li",null,"Events are handled asynchronously"),r().createElement("li",null,"Multiple listeners can respond to the same event"),r().createElement("li",null,"Events can carry data through arguments"),r().createElement("li",null,"Events are handled in the order they are registered")))))),r().createElement("section",{className:"mb-8"},r().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"The EventEmitter Class"),r().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},r().createElement("div",{className:"flex items-start"},r().createElement(m.z1n,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),r().createElement("div",null,r().createElement("p",{className:"text-gray-600 mb-4"},"The EventEmitter class is the core of Node.js's event system. It provides methods to:"),r().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2 mb-4"},r().createElement("li",null,"Emit events"),r().createElement("li",null,"Register event listeners"),r().createElement("li",null,"Remove event listeners"),r().createElement("li",null,"Handle events once")),r().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"const EventEmitter = require('events');\n\n// Create a new emitter instance\nconst myEmitter = new EventEmitter();\n\n// Register an event listener\nmyEmitter.on('event', (data) => {\n  console.log('Event occurred:', data);\n});\n\n// Emit an event\nmyEmitter.emit('event', 'Hello World');"))))),r().createElement("section",{className:"mb-8"},r().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Event Methods"),r().createElement("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4"},r().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},r().createElement("h3",{className:"font-semibold mb-2"},"Listener Management"),r().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"// Add listener\nemitter.on('event', listener);\n\n// Add one-time listener\nemitter.once('event', listener);\n\n// Remove listener\nemitter.off('event', listener);\n\n// Remove all listeners\nemitter.removeAllListeners('event');\n\n// Get listener count\nemitter.listenerCount('event');")),r().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},r().createElement("h3",{className:"font-semibold mb-2"},"Event Emission"),r().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"// Emit event with data\nemitter.emit('event', arg1, arg2);\n\n// Emit error event\nemitter.emit('error', new Error());\n\n// Check if has listeners\nemitter.eventNames();\n\n// Get max listeners\nemitter.getMaxListeners();\n\n// Set max listeners\nemitter.setMaxListeners(20);")))),r().createElement("section",{className:"mb-8"},r().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Creating Custom Event Emitters"),r().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},r().createElement("div",{className:"flex items-start"},r().createElement(m.PjK,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),r().createElement("div",null,r().createElement("p",{className:"text-gray-600 mb-4"},"You can create custom classes that extend EventEmitter to add event capabilities:"),r().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"const EventEmitter = require('events');\n\nclass ChatRoom extends EventEmitter {\n  constructor() {\n    super();\n    this.users = new Set();\n  }\n\n  addUser(user) {\n    this.users.add(user);\n    this.emit('userJoined', user);\n  }\n\n  removeUser(user) {\n    this.users.delete(user);\n    this.emit('userLeft', user);\n  }\n\n  sendMessage(user, message) {\n    this.emit('message', { user, message });\n  }\n}\n\n// Usage\nconst room = new ChatRoom();\n\nroom.on('userJoined', (user) => {\n  console.log(`${user} joined the room`);\n});\n\nroom.on('message', ({ user, message }) => {\n  console.log(`${user}: ${message}`);\n});\n\nroom.addUser('Alice');\nroom.sendMessage('Alice', 'Hello everyone!');"))))),r().createElement("section",{className:"mb-8"},r().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Error Events"),r().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},r().createElement("div",{className:"flex items-start"},r().createElement(m.y3G,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),r().createElement("div",null,r().createElement("p",{className:"text-gray-600 mb-4"},"Error events are special in Node.js. If an error event is emitted and there are no listeners, Node.js will throw the error and crash the process."),r().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"const myEmitter = new EventEmitter();\n\n// Always handle error events\nmyEmitter.on('error', (err) => {\n  console.error('An error occurred:', err);\n});\n\n// This won't crash the process\nmyEmitter.emit('error', new Error('Something went wrong'));"))))),r().createElement("section",{className:"mb-8"},r().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Best Practices"),r().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},r().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},r().createElement("li",null,"Always handle 'error' events"),r().createElement("li",null,"Remove listeners when they're no longer needed"),r().createElement("li",null,"Use descriptive event names"),r().createElement("li",null,"Don't emit events in constructors"),r().createElement("li",null,"Be careful with memory leaks from listeners"),r().createElement("li",null,"Consider using once() for one-time events")))),r().createElement("div",{className:"mt-12 flex justify-between items-center"},r().createElement(l.N_,{to:"/nodejs-course/package-json",className:"text-blue-600 hover:text-blue-800"},"← Package.json"),r().createElement(l.N_,{to:"/nodejs-course/buffers",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"},"Next: Buffers →")))}}]);