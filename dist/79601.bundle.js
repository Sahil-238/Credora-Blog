"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[79601],{79601:(e,r,t)=>{t.r(r),t.d(r,{default:()=>i});var n=t(96540),a=t.n(n),s=t(71181),l=t(84976),o=t(42644);const i=()=>a().createElement(s.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto p-6"},a().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"Error Handling in Node.js"),a().createElement("section",{className:"mb-8"},a().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Types of Errors"),a().createElement("p",{className:"text-gray-600 mb-4"},"Node.js applications can encounter various types of errors that need to be handled appropriately to ensure robust operation and good user experience."),a().createElement("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4"},a().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},a().createElement("h3",{className:"font-semibold mb-2"},"Standard JavaScript Errors"),a().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},a().createElement("li",null,"SyntaxError"),a().createElement("li",null,"ReferenceError"),a().createElement("li",null,"TypeError"),a().createElement("li",null,"RangeError"),a().createElement("li",null,"URIError"),a().createElement("li",null,"EvalError"))),a().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},a().createElement("h3",{className:"font-semibold mb-2"},"Node.js Specific Errors"),a().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},a().createElement("li",null,"SystemError"),a().createElement("li",null,"AssertionError"),a().createElement("li",null,"CustomError"),a().createElement("li",null,"ValidationError"))))),a().createElement("section",{className:"mb-8"},a().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Error First Callback Pattern"),a().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},a().createElement("div",{className:"flex items-start"},a().createElement(o.eHT,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),a().createElement("div",null,a().createElement("p",{className:"text-gray-600 mb-4"},"Node.js uses the error-first callback pattern for asynchronous operations. The first argument of the callback is reserved for an error object."),a().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"const fs = require('fs');\n\n// Error-first callback pattern\nfs.readFile('file.txt', (err, data) => {\n  if (err) {\n    console.error('Error reading file:', err);\n    return;\n  }\n  console.log('File contents:', data);\n});\n\n// Multiple error handling in callbacks\nfs.readFile('file1.txt', (err1, data1) => {\n  if (err1) return handleError(err1);\n  \n  fs.readFile('file2.txt', (err2, data2) => {\n    if (err2) return handleError(err2);\n    \n    processFiles(data1, data2);\n  });\n});"))))),a().createElement("section",{className:"mb-8"},a().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Promises and Async/Await"),a().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},a().createElement("div",{className:"flex items-start"},a().createElement(o.z1n,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),a().createElement("div",null,a().createElement("p",{className:"text-gray-600 mb-4"},"Modern Node.js applications often use Promises and async/await for cleaner error handling:"),a().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"const fs = require('fs').promises;\n\n// Using Promises\nfs.readFile('file.txt')\n  .then(data => {\n    console.log('File contents:', data);\n  })\n  .catch(err => {\n    console.error('Error reading file:', err);\n  });\n\n// Using async/await with try/catch\nasync function readFileContents() {\n  try {\n    const data = await fs.readFile('file.txt');\n    console.log('File contents:', data);\n  } catch (err) {\n    console.error('Error reading file:', err);\n  }\n}\n\n// Handling multiple async operations\nasync function processMultipleFiles() {\n  try {\n    const [file1, file2] = await Promise.all([\n      fs.readFile('file1.txt'),\n      fs.readFile('file2.txt')\n    ]);\n    return processFiles(file1, file2);\n  } catch (err) {\n    console.error('Error processing files:', err);\n    throw err; // Re-throw if needed\n  }\n}"))))),a().createElement("section",{className:"mb-8"},a().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Custom Error Types"),a().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},a().createElement("div",{className:"flex items-start"},a().createElement(o.pcC,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),a().createElement("div",null,a().createElement("p",{className:"text-gray-600 mb-4"},"Creating custom error types helps in handling specific error scenarios:"),a().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"class ValidationError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'ValidationError';\n    this.code = 'EVAL_ERR';\n    Error.captureStackTrace(this, ValidationError);\n  }\n}\n\nclass DatabaseError extends Error {\n  constructor(message, query) {\n    super(message);\n    this.name = 'DatabaseError';\n    this.query = query;\n    Error.captureStackTrace(this, DatabaseError);\n  }\n}\n\n// Usage\nfunction validateUser(user) {\n  if (!user.email) {\n    throw new ValidationError('Email is required');\n  }\n  if (!user.password) {\n    throw new ValidationError('Password is required');\n  }\n}\n\n// Error handling\ntry {\n  validateUser({ name: 'John' });\n} catch (err) {\n  if (err instanceof ValidationError) {\n    console.error('Validation failed:', err.message);\n  } else {\n    console.error('Unknown error:', err);\n  }\n}"))))),a().createElement("section",{className:"mb-8"},a().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Global Error Handling"),a().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},a().createElement("div",{className:"flex items-start"},a().createElement(o.A3x,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),a().createElement("div",null,a().createElement("p",{className:"text-gray-600 mb-4"},"Node.js provides several ways to handle uncaught errors globally:"),a().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"// Handle uncaught exceptions\nprocess.on('uncaughtException', (err) => {\n  console.error('Uncaught Exception:', err);\n  // Perform cleanup\n  process.exit(1);\n});\n\n// Handle unhandled promise rejections\nprocess.on('unhandledRejection', (reason, promise) => {\n  console.error('Unhandled Rejection at:', promise, 'reason:', reason);\n  // Perform cleanup\n  process.exit(1);\n});\n\n// Handle program termination\nprocess.on('SIGTERM', () => {\n  console.log('Received SIGTERM');\n  // Perform cleanup\n  server.close(() => {\n    process.exit(0);\n  });\n});\n\n// In Express applications\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).send('Something broke!');\n});"))))),a().createElement("section",{className:"mb-8"},a().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Error Handling Best Practices"),a().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},a().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},a().createElement("li",null,"Always handle both synchronous and asynchronous errors"),a().createElement("li",null,"Use try/catch blocks with async/await"),a().createElement("li",null,"Create custom error types for specific scenarios"),a().createElement("li",null,"Implement global error handlers"),a().createElement("li",null,"Log errors with appropriate detail level"),a().createElement("li",null,"Clean up resources in error handlers"),a().createElement("li",null,"Don't expose sensitive information in error messages"),a().createElement("li",null,"Use error monitoring services in production")))),a().createElement("div",{className:"mt-12 flex justify-between items-center"},a().createElement(l.N_,{to:"/nodejs-course/streams",className:"text-blue-600 hover:text-blue-800"},"← Streams"),a().createElement(l.N_,{to:"/nodejs-course/http-module",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"},"Next: HTTP Module →")))}}]);