"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[14326],{14326:(e,t,a)=>{a.r(t),a.d(t,{default:()=>i});var l=a(96540),o=a.n(l),n=a(71181),s=a(84976),c=a(58027),r=a(82355);const i=()=>o().createElement(n.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto p-6"},o().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"Recoil"),o().createElement("section",{className:"mb-10"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"What is Recoil?"),o().createElement("p",{className:"text-gray-600 mb-4"},"Recoil is a state management library for React developed by Facebook. It offers a simple and flexible way to share state across components with a minimal API surface. Recoil works by introducing ",o().createElement("strong",null,"atoms")," (units of state) and ",o().createElement("strong",null,"selectors")," (derived state), providing a scalable solution that integrates seamlessly with React’s concurrent mode."),o().createElement("div",{className:"bg-blue-50 border-l-4 border-blue-400 p-4 mb-6"},o().createElement("p",{className:"text-blue-700"},o().createElement("strong",null,"Key Features:"),o().createElement("ul",{className:"list-disc list-inside mt-2"},o().createElement("li",null,"State is shared using atoms, which are like React state but globally accessible."),o().createElement("li",null,"Selectors allow you to compute derived state efficiently."),o().createElement("li",null,"Supports asynchronous queries and React Suspense integration."),o().createElement("li",null,"Optimized for fine-grained re-rendering."))))),o().createElement("section",{className:"mb-10"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Creating an Atom (State Unit)"),o().createElement("p",{className:"text-gray-600 mb-4"},"Atoms are the fundamental units of state in Recoil. Think of them like pieces of React state, but accessible globally to any component that needs them. Here's an example of creating a simple counter atom:"),o().createElement("div",{className:"bg-gray-900 rounded-lg p-4 mb-6 overflow-x-auto"},o().createElement(c.A,{language:"javascript",style:r.A},"import { atom } from 'recoil';\n\nexport const counterState = atom({\n  key: 'counterState', // unique ID (with respect to other atoms/selectors)\n  default: 0,          // default value (aka initial value)\n});"))),o().createElement("section",{className:"mb-10"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Using the Atom in Components"),o().createElement("p",{className:"text-gray-600 mb-4"},"You can read and write atom state using Recoil hooks such as ",o().createElement("code",null,"useRecoilState"),", which works similarly to React’s ",o().createElement("code",null,"useState")," but with global shared state:"),o().createElement("div",{className:"bg-gray-900 rounded-lg p-4 mb-6 overflow-x-auto"},o().createElement(c.A,{language:"javascript",style:r.A},"import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { counterState } from './state';\n\nfunction Counter() {\n  const [count, setCount] = useRecoilState(counterState);\n\n  return (\n    <div>\n      <h1>Count: {count}</h1>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n      <button onClick={() => setCount(count - 1)}>Decrement</button>\n    </div>\n  );\n}\n\nexport default Counter;")),o().createElement("p",{className:"text-gray-600"},"In this example, the ",o().createElement("code",null,"Counter")," component can both display and update the shared counter state.")),o().createElement("section",{className:"mb-10"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Selectors: Computing Derived State"),o().createElement("p",{className:"text-gray-600 mb-4"},"Sometimes you want to derive state based on other state values. Recoil's selectors let you define computed state that updates automatically when its dependencies change. For example, doubling the counter value:"),o().createElement("div",{className:"bg-gray-900 rounded-lg p-4 mb-6 overflow-x-auto"},o().createElement(c.A,{language:"javascript",style:r.A},"import { selector } from 'recoil';\nimport { counterState } from './state';\n\nexport const doubledCountState = selector({\n  key: 'doubledCountState',\n  get: ({ get }) => {\n    const count = get(counterState);\n    return count * 2;\n  },\n});")),o().createElement("p",{className:"text-gray-600 mb-4"},"You can then use selectors in your components with ",o().createElement("code",null,"useRecoilValue"),":"),o().createElement("div",{className:"bg-gray-900 rounded-lg p-4 mb-6 overflow-x-auto"},o().createElement(c.A,{language:"javascript",style:r.A},"import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { doubledCountState } from './state';\n\nfunction DisplayDouble() {\n  const doubledCount = useRecoilValue(doubledCountState);\n\n  return <p>Doubled Count: {doubledCount}</p>;\n}\n\nexport default DisplayDouble;"))),o().createElement("section",{className:"mb-10"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Why Choose Recoil?"),o().createElement("p",{className:"text-gray-600 mb-4"},"Recoil shines when you need fine-grained shared state with easy-to-manage derived data. It integrates nicely with React’s Suspense and concurrent features and avoids the boilerplate often associated with other state management solutions like Redux."),o().createElement("ul",{className:"list-disc list-inside text-gray-600"},o().createElement("li",null,"Great for apps needing complex state sharing across many components."),o().createElement("li",null,"Allows asynchronous selectors for fetching and caching data."),o().createElement("li",null,"Minimal API and very React-friendly."))),o().createElement("section",{className:"mb-10"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Getting Started with Recoil"),o().createElement("p",{className:"text-gray-600 mb-4"},"To start using Recoil, install it with:"),o().createElement("pre",{className:"bg-gray-100 p-4 rounded mb-4"},o().createElement("code",null,"npm install recoil")),o().createElement("p",{className:"text-gray-600 mb-4"},"Wrap your app in the ",o().createElement("code",null,"RecoilRoot")," component to provide Recoil state context:"),o().createElement("pre",{className:"bg-gray-100 p-4 rounded mb-4"},o().createElement("code",null,"import { RecoilRoot } from 'recoil';\n\nfunction App() {\n  return (\n    <RecoilRoot>\n      {/* Your components */}\n    </RecoilRoot>\n  );\n}\n\nexport default App;"))),o().createElement("div",{className:"mt-12 flex justify-between items-center"},o().createElement(s.N_,{to:"/react-course/zustand",className:"text-blue-600 hover:text-blue-800"},"← Zustand"),o().createElement(s.N_,{to:"/react-course/jotai",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"},"Next: Jotai →")))},82355:(e,t,a)=>{a.d(t,{A:()=>l});const l={hljs:{display:"block",overflowX:"auto",padding:"0.5em",color:"#abb2bf",background:"#282c34"},"hljs-comment":{color:"#5c6370",fontStyle:"italic"},"hljs-quote":{color:"#5c6370",fontStyle:"italic"},"hljs-doctag":{color:"#c678dd"},"hljs-keyword":{color:"#c678dd"},"hljs-formula":{color:"#c678dd"},"hljs-section":{color:"#e06c75"},"hljs-name":{color:"#e06c75"},"hljs-selector-tag":{color:"#e06c75"},"hljs-deletion":{color:"#e06c75"},"hljs-subst":{color:"#e06c75"},"hljs-literal":{color:"#56b6c2"},"hljs-string":{color:"#98c379"},"hljs-regexp":{color:"#98c379"},"hljs-addition":{color:"#98c379"},"hljs-attribute":{color:"#98c379"},"hljs-meta-string":{color:"#98c379"},"hljs-built_in":{color:"#e6c07b"},"hljs-class .hljs-title":{color:"#e6c07b"},"hljs-attr":{color:"#d19a66"},"hljs-variable":{color:"#d19a66"},"hljs-template-variable":{color:"#d19a66"},"hljs-type":{color:"#d19a66"},"hljs-selector-class":{color:"#d19a66"},"hljs-selector-attr":{color:"#d19a66"},"hljs-selector-pseudo":{color:"#d19a66"},"hljs-number":{color:"#d19a66"},"hljs-symbol":{color:"#61aeee"},"hljs-bullet":{color:"#61aeee"},"hljs-link":{color:"#61aeee",textDecoration:"underline"},"hljs-meta":{color:"#61aeee"},"hljs-selector-id":{color:"#61aeee"},"hljs-title":{color:"#61aeee"},"hljs-emphasis":{fontStyle:"italic"},"hljs-strong":{fontWeight:"bold"}}}}]);