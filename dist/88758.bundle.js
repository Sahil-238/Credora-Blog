"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[64559,88758],{64559:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var a=n(96540),l=n.n(a),s=n(47767),i=n(42644),r=n(75378);const c=()=>{const e=(0,s.Zp)(),t=(0,s.zy)(),n=Object.values(r.default).reduce(((e,t)=>[...e,...t.sections]),[]),a=t.pathname.split("/"),c=a[a.length-1],m=n.findIndex((e=>{const t=e.id.split("/");return t[t.length-1]===c})),o=m>0?n[m-1]:null,d=m<n.length-1?n[m+1]:null;return l().createElement("div",{className:"flex justify-between items-center mt-12 pt-6 border-t border-gray-200"},o?l().createElement("button",{onClick:()=>e("/css-course/".concat(o.id)),className:"flex items-center space-x-2 text-blue-600 hover:text-blue-800"},l().createElement(i.kRp,null),l().createElement("span",null,"Previous: ",o.title)):l().createElement("div",null),d?l().createElement("button",{onClick:()=>e("/css-course/".concat(d.id)),className:"flex items-center space-x-2 text-blue-600 hover:text-blue-800"},l().createElement("span",null,"Next: ",d.title),l().createElement(i.dyV,null)):l().createElement("div",null))}},88758:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});var a=n(96540),l=n.n(a),s=n(71181),i=n(64559);const r=()=>l().createElement(s.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-3xl mx-auto"},l().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"Introduction to Responsive Web Design"),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"What is Responsive Web Design?"),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("p",{className:"text-gray-600 mb-4"},"Responsive Web Design (RWD) is an approach to web design that makes web pages render well on a variety of devices and window or screen sizes. It uses HTML and CSS to resize, hide, shrink, enlarge, or move content to make it look good on any screen."),l().createElement("div",{className:"mt-6"},l().createElement("h3",{className:"text-xl font-semibold text-gray-700 mb-3"},"Key Concepts"),l().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},l().createElement("li",null,"Fluid grids and layouts"),l().createElement("li",null,"Flexible images and media"),l().createElement("li",null,"Media queries"),l().createElement("li",null,"Breakpoints"),l().createElement("li",null,"Mobile-first approach"))))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Core Principles"),l().createElement("div",{className:"space-y-6"},l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-xl font-semibold text-gray-700 mb-3"},"1. Fluid Grids"),l().createElement("div",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono mb-4"},l().createElement("pre",{className:"whitespace-pre-wrap"},".container {\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 15px;\n}\n\n.grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 20px;\n}")),l().createElement("p",{className:"text-gray-600"},"Fluid grids use relative units like percentages instead of fixed units, allowing content to flex and adapt to different screen sizes.")),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-xl font-semibold text-gray-700 mb-3"},"2. Flexible Images"),l().createElement("div",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono mb-4"},l().createElement("pre",{className:"whitespace-pre-wrap"},"img {\n  max-width: 100%;\n  height: auto;\n}\n\n.responsive-image {\n  width: 100%;\n  height: 300px;\n  object-fit: cover;\n}")),l().createElement("p",{className:"text-gray-600"},"Images should scale within their containing elements while maintaining their aspect ratios.")),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-xl font-semibold text-gray-700 mb-3"},"3. Media Queries"),l().createElement("div",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono mb-4"},l().createElement("pre",{className:"whitespace-pre-wrap"},"/* Mobile First Approach */\n.container {\n  width: 100%;\n  padding: 15px;\n}\n\n/* Tablet and larger */\n@media (min-width: 768px) {\n  .container {\n    width: 750px;\n    margin: 0 auto;\n  }\n}\n\n/* Desktop */\n@media (min-width: 1024px) {\n  .container {\n    width: 970px;\n  }\n}")),l().createElement("p",{className:"text-gray-600"},"Media queries allow you to apply different styles based on device characteristics, primarily the viewport width.")))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Mobile-First Approach"),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("p",{className:"text-gray-600 mb-4"},"Mobile-first is a design strategy that prioritizes designing for mobile devices first, then progressively enhancing the design for larger screens. This approach ensures a better experience on mobile devices and typically results in cleaner, more efficient code."),l().createElement("div",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono mb-4"},l().createElement("pre",{className:"whitespace-pre-wrap"},"/* Base styles for mobile */\n.element {\n  font-size: 16px;\n  padding: 10px;\n}\n\n/* Enhanced styles for larger screens */\n@media (min-width: 768px) {\n  .element {\n    font-size: 18px;\n    padding: 20px;\n  }\n}\n\n@media (min-width: 1024px) {\n  .element {\n    font-size: 20px;\n    padding: 30px;\n  }\n}")))),l().createElement("div",{className:"mt-8 p-4 bg-pink-50 rounded-lg"},l().createElement("h2",{className:"text-xl font-semibold text-pink-800 mb-2"},"Best Practices"),l().createElement("ul",{className:"list-disc list-inside text-pink-600 space-y-2"},l().createElement("li",null,"Start with a mobile-first approach"),l().createElement("li",null,"Use relative units (%, rem, em) instead of fixed units"),l().createElement("li",null,"Test on real devices when possible"),l().createElement("li",null,"Consider performance on all devices"),l().createElement("li",null,"Use appropriate breakpoints based on content"),l().createElement("li",null,"Maintain consistent spacing and typography"))),l().createElement(i.default,null))}}]);