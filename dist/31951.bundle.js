"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[31951],{31951:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var a=n(96540),l=n.n(a),o=n(71181),s=n(42644),r=n(84976);const m=e=>e<=1?1:e*m(e-1),i=(0,a.memo)((function(e){let{data:t}=e;return l().createElement("div",{className:"p-4 bg-gray-100 rounded"},l().createElement("p",null,"Memoized Component with data: ",t))})),c=()=>{const[e,t]=(0,a.useState)("memoization"),[n,c]=(0,a.useState)(0),[d,u]=(0,a.useState)(5),[g,p]=(0,a.useState)(!1),b=(0,a.useMemo)((()=>m(d)),[d]),x=(0,a.useCallback)((()=>{c((e=>e+1))}),[]),h={memoization:{title:"Memoization",code:"// Component memoization\nconst MemoizedComponent = memo(function MyComponent({ data }) {\n  return <div>{data}</div>;\n});\n\n// Value memoization\nconst memoizedValue = useMemo(() => {\n  return expensiveCalculation(props.data);\n}, [props.data]);\n\n// Callback memoization\nconst memoizedCallback = useCallback(() => {\n  doSomething(props.data);\n}, [props.data]);",explanation:"Memoization prevents unnecessary re-renders and recalculations."},virtualization:{title:"Virtualization",code:"import { FixedSizeList } from 'react-window';\n\nfunction VirtualList({ items }) {\n  const Row = ({ index, style }) => (\n    <div style={style}>\n      {items[index]}\n    </div>\n  );\n\n  return (\n    <FixedSizeList\n      height={400}\n      width={300}\n      itemCount={items.length}\n      itemSize={50}\n    >\n      {Row}\n    </FixedSizeList>\n  );\n}",explanation:"Virtualization renders only visible items in long lists."},codeSpitting:{title:"Code Splitting",code:"// Route-based code splitting\nconst HomePage = lazy(() => import('./pages/Home'));\nconst AboutPage = lazy(() => import('./pages/About'));\n\nfunction App() {\n  return (\n    <Suspense fallback={<Loading />}>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/about\" element={<AboutPage />} />\n      </Routes>\n    </Suspense>\n  );\n}\n\n// Component-based code splitting\nconst HeavyComponent = lazy(() => import('./HeavyComponent'));",explanation:"Code splitting reduces the initial bundle size by loading components on demand."},profiling:{title:"Profiling",code:"// Development profiling\nimport { Profiler } from 'react';\n\nfunction onRenderCallback(\n  id,\n  phase,\n  actualDuration,\n  baseDuration,\n  startTime,\n  commitTime\n) {\n  console.log({\n    id,\n    phase,\n    actualDuration,\n    baseDuration,\n    startTime,\n    commitTime\n  });\n}\n\n<Profiler id=\"Navigation\" onRender={onRenderCallback}>\n  <Navigation />\n</Profiler>",explanation:"Profiling helps identify performance bottlenecks in React applications."}};return l().createElement(o.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto"},l().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"Performance Optimization"),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Understanding Performance"),l().createElement("p",{className:"text-gray-600 mb-4"},"React applications can face performance challenges as they grow. Understanding and implementing proper optimization techniques is crucial for maintaining a smooth user experience."),l().createElement("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4"},l().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},l().createElement(s.Ojn,{className:"text-2xl text-blue-600 mb-2"}),l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Rendering"),l().createElement("p",{className:"text-gray-600"},"Optimize component rendering")),l().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},l().createElement(s.FrA,{className:"text-2xl text-blue-600 mb-2"}),l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Loading"),l().createElement("p",{className:"text-gray-600"},"Improve initial load time")),l().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},l().createElement(s.hht,{className:"text-2xl text-blue-600 mb-2"}),l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Monitoring"),l().createElement("p",{className:"text-gray-600"},"Track performance metrics")))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Optimization Techniques"),l().createElement("div",{className:"bg-white rounded-lg shadow overflow-hidden"},l().createElement("div",{className:"flex border-b overflow-x-auto"},Object.entries(h).map((n=>{let[a,o]=n;return l().createElement("button",{key:a,className:"px-6 py-3 whitespace-nowrap ".concat(e===a?"bg-blue-50 text-blue-600 border-b-2 border-blue-600":"text-gray-600 hover:bg-gray-50"),onClick:()=>t(a)},o.title)}))),l().createElement("div",{className:"p-6"},l().createElement("pre",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono text-sm mb-4"},h[e].code),l().createElement("p",{className:"text-gray-600"},h[e].explanation)))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Live Examples"),l().createElement("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6"},l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-4"},"useMemo Example"),l().createElement("div",{className:"space-y-4"},l().createElement("div",{className:"flex items-center space-x-4"},l().createElement("label",{className:"text-gray-600"},"Number:"),l().createElement("input",{type:"number",value:d,onChange:e=>u(parseInt(e.target.value)||0),className:"px-3 py-2 border rounded",min:"0",max:"10"})),l().createElement("p",{className:"text-gray-600"},"Factorial of ",d," is: ",b),l().createElement("p",{className:"text-sm text-gray-500"},"The factorial calculation is memoized and only recalculated when the number changes."))),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-4"},"React.memo Example"),l().createElement("div",{className:"space-y-4"},l().createElement("button",{onClick:x,className:"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors"},"Increment Count: ",n),l().createElement(i,{data:"Hello"}),l().createElement("p",{className:"text-sm text-gray-500"},"The memoized component only re-renders when its props change, not when the parent re-renders."))))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Common Performance Issues"),l().createElement("div",{className:"space-y-4"},l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Unnecessary Re-renders"),l().createElement("pre",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono text-sm"},"// Bad\nfunction ParentComponent() {\n  const [count, setCount] = useState(0);\n  \n  // Created on every render\n  const handleClick = () => {\n    console.log('clicked');\n  };\n  \n  return <ChildComponent onClick={handleClick} />;\n}\n\n// Good\nfunction ParentComponent() {\n  const [count, setCount] = useState(0);\n  \n  // Memoized callback\n  const handleClick = useCallback(() => {\n    console.log('clicked');\n  }, []);\n  \n  return <ChildComponent onClick={handleClick} />;\n}")),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Large Bundle Size"),l().createElement("pre",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono text-sm"},"// Bad\nimport { format } from 'date-fns';\n\n// Good\nimport format from 'date-fns/format';\n\n// Even Better (with dynamic import)\nconst format = await import('date-fns/format');")))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Advanced Optimization"),l().createElement("button",{onClick:()=>p(!g),className:"mb-4 text-blue-600 hover:text-blue-800"},g?"Hide Advanced Topics":"Show Advanced Topics"),g&&l().createElement("div",{className:"space-y-4"},l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Custom Hooks Optimization"),l().createElement("pre",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono text-sm"},"function useSearch(items) {\n  const [query, setQuery] = useState('');\n  \n  const filteredItems = useMemo(() => \n    items.filter(item =>\n      item.toLowerCase().includes(query.toLowerCase())\n    ),\n    [items, query]\n  );\n  \n  return [filteredItems, setQuery];\n}")),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Web Workers"),l().createElement("pre",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono text-sm"},"// worker.js\nself.onmessage = function(e) {\n  const result = heavyCalculation(e.data);\n  self.postMessage(result);\n};\n\n// Component\nfunction Component() {\n  const [result, setResult] = useState(null);\n  const worker = useRef(new Worker('./worker.js'));\n  \n  useEffect(() => {\n    worker.current.onmessage = (e) => {\n      setResult(e.data);\n    };\n    \n    return () => worker.current.terminate();\n  }, []);\n}")))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Exercise"),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},l().createElement("p",{className:"text-gray-600 mb-4"},"Optimize a virtual list component with the following features:"),l().createElement("div",{className:"bg-gray-100 p-4 rounded"},l().createElement("p",{className:"text-gray-700 font-semibold"},"Requirements:"),l().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},l().createElement("li",null,"Implement windowing for large lists"),l().createElement("li",null,"Add memoization for list items"),l().createElement("li",null,"Optimize scroll performance"),l().createElement("li",null,"Add loading states and error boundaries"),l().createElement("li",null,"Measure and compare performance"))))),l().createElement("div",{className:"mt-12 flex justify-between items-center"},l().createElement(r.N_,{to:"/react-course/state-management",className:"text-blue-600 hover:text-blue-800"},"← Previous: State Management"),l().createElement(r.N_,{to:"/react-course/testing",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"},"Next: Testing →")))}}}]);