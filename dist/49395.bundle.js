"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[49395],{16067:(e,n,t)=>{var a=t(85072),r=t.n(a),l=t(97825),o=t.n(l),c=t(77659),s=t.n(c),i=t(55056),m=t.n(i),d=t(10540),u=t.n(d),p=t(41113),g=t.n(p),b=t(83804),h={};h.styleTagTransform=g(),h.setAttributes=m(),h.insert=s().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=u(),r()(b.A,h),b.A&&b.A.locals&&b.A.locals},49395:(e,n,t)=>{t.r(n),t.d(n,{default:()=>c});var a=t(96540),r=t.n(a),l=t(47767),o=t(71181);t(16067);const c=()=>{const e=(0,l.Zp)();return r().createElement("div",{className:"chapter-content"},r().createElement("nav",{className:"bg-white shadow-lg mb-8"},r().createElement("div",{className:"max-w-7xl mx-auto px-4"},r().createElement("div",{className:"flex justify-between h-16"},r().createElement("div",{className:"flex items-center"},r().createElement("button",{onClick:()=>e("/courses/react"),className:"text-gray-800 hover:text-blue-600"},"← Back to Course"))))),r().createElement(o.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5}},r().createElement("h1",null,"JSX in React"),r().createElement("section",{className:"section"},r().createElement("h2",null,"What is JSX?"),r().createElement("p",null,"JSX (JavaScript XML) is a syntax extension for JavaScript that allows you to write HTML-like code within your JavaScript code. It makes React code more readable and writing templates more intuitive."),r().createElement("div",{className:"code-example"},r().createElement("h3",null,"JSX vs Plain JavaScript:"),r().createElement("pre",null,r().createElement("code",null,"\n// JSX Syntax\nconst element = (\n  <h1 className=\"greeting\">\n    Hello, World!\n  </h1>\n);\n\n// Plain JavaScript (what JSX compiles to)\nconst element = React.createElement(\n  'h1',\n  {className: 'greeting'},\n  'Hello, World!'\n);\n              ")))),r().createElement("section",{className:"section"},r().createElement("h2",null,"JSX Rules and Syntax"),r().createElement("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6"},r().createElement("div",{className:"rule-card bg-white p-4 rounded-lg shadow"},r().createElement("h3",null,"Elements Must be Closed"),r().createElement("div",{className:"code-example"},r().createElement("pre",null,r().createElement("code",null,'\n// Correct\n<img src="image.jpg" />\n<input type="text" />\n\n// Also correct\n<div>\n  Content\n</div>\n                  ')))),r().createElement("div",{className:"rule-card bg-white p-4 rounded-lg shadow"},r().createElement("h3",null,"Attributes Use camelCase"),r().createElement("div",{className:"code-example"},r().createElement("pre",null,r().createElement("code",null,'\n// Correct\n<div className="container">\n<button onClick={handleClick}>\n\n// Incorrect\n<div class="container">\n<button onclick={handleClick}>\n                  '))))),r().createElement("div",{className:"callout warning"},r().createElement("strong",null,"Important Rules:"),r().createElement("ul",null,r().createElement("li",null,"JSX must return a single root element"),r().createElement("li",null,"All tags must be closed"),r().createElement("li",null,"Use className instead of class"),r().createElement("li",null,"JavaScript expressions in curly braces"),r().createElement("li",null,"Attributes use camelCase naming")))),r().createElement("section",{className:"section"},r().createElement("h2",null,"JSX Expressions"),r().createElement("p",null,"You can embed any JavaScript expression in JSX by wrapping it in curly braces."),r().createElement("div",{className:"code-example"},r().createElement("pre",null,r().createElement("code",null,"\nconst name = 'React Developer';\nconst element = <h1>Hello, {name}</h1>;\n\n// Expressions in attributes\nconst imgUrl = 'https://example.com/image.jpg';\nconst element = <img src={imgUrl} />;\n\n// Conditional rendering\nconst isLoggedIn = true;\nconst element = (\n  <div>\n    {isLoggedIn ? <UserGreeting /> : <GuestGreeting />}\n  </div>\n);\n              ")))),r().createElement("section",{className:"section"},r().createElement("h2",null,"JSX Attributes"),r().createElement("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4"},r().createElement("div",{className:"attribute-card bg-white p-4 rounded-lg shadow"},r().createElement("h3",null,"String Literals"),r().createElement("div",{className:"code-example"},r().createElement("pre",null,r().createElement("code",null,'\nconst element = <div className="container">\nconst input = <input type="text" />\n                  ')))),r().createElement("div",{className:"attribute-card bg-white p-4 rounded-lg shadow"},r().createElement("h3",null,"JavaScript Expressions"),r().createElement("div",{className:"code-example"},r().createElement("pre",null,r().createElement("code",null,"\nconst width = 100;\nconst element = <div style={{width: width}}>\nconst input = <input value={value} />\n                  ")))))),r().createElement("section",{className:"section"},r().createElement("h2",null,"JSX Styling"),r().createElement("div",{className:"code-example"},r().createElement("pre",null,r().createElement("code",null,"\n// Inline Styling\nconst styles = {\n  backgroundColor: 'black',\n  color: 'white',\n  padding: '10px'\n};\n\nconst element = <div style={styles}>Styled Content</div>;\n\n// Class-based Styling\nconst element = <div className=\"container large-text\">\n  Styled with CSS Classes\n</div>;\n              "))),r().createElement("div",{className:"callout"},r().createElement("strong",null,"Note:"),r().createElement("p",null,"Inline styles in JSX use a JavaScript object with camelCased properties instead of a CSS string."))),r().createElement("section",{className:"section"},r().createElement("h2",null,"JSX Comments"),r().createElement("div",{className:"code-example"},r().createElement("pre",null,r().createElement("code",null,"\n{/* This is a JSX comment */}\nconst element = (\n  <div>\n    {/* Multi-line\n        JSX comment */}\n    <h1>Hello</h1>\n  </div>\n);\n              ")))),r().createElement("div",{className:"chapter-nav"},r().createElement("button",{onClick:()=>e("/courses/react/getting-started"),className:"nav-button"},"← Previous: Getting Started"),r().createElement("button",{onClick:()=>e("/courses/react/components"),className:"nav-button"},"Next: Components →"))))}},83804:(e,n,t)=>{t.d(n,{A:()=>c});var a=t(31601),r=t.n(a),l=t(76314),o=t.n(l)()(r());o.push([e.id,"/* Base styles */\n.chapter-content {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n/* Code blocks */\npre {\n  background-color: #1a1a1a;\n  border-radius: 0.5rem;\n  padding: 1rem;\n  overflow-x: auto;\n  margin: 1rem 0;\n}\n\ncode {\n  font-family: 'Fira Code', monospace;\n  color: #e0e0e0;\n}\n\n/* Section styles */\n.section {\n  margin-bottom: 2rem;\n  padding: 1.5rem;\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n/* Interactive elements */\n.interactive-demo {\n  border: 2px solid #e5e7eb;\n  border-radius: 0.5rem;\n  padding: 1.5rem;\n  margin: 1rem 0;\n}\n\n/* Navigation */\n.chapter-nav {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n  padding-top: 1rem;\n  border-top: 1px solid #e5e7eb;\n}\n\n.nav-button {\n  padding: 0.5rem 1rem;\n  background-color: #3b82f6;\n  color: white;\n  border-radius: 0.375rem;\n  text-decoration: none;\n  transition: background-color 0.2s;\n}\n\n.nav-button:hover {\n  background-color: #2563eb;\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .chapter-content {\n    padding: 1rem;\n  }\n\n  pre {\n    padding: 0.75rem;\n  }\n\n  .interactive-demo {\n    padding: 1rem;\n  }\n}\n\n/* Dark mode support */\n@media (prefers-color-scheme: dark) {\n  .chapter-content {\n    background-color: #1a1a1a;\n    color: #e0e0e0;\n  }\n\n  .section {\n    background-color: #2d2d2d;\n  }\n\n  .interactive-demo {\n    border-color: #404040;\n  }\n}\n\n/* Animations */\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.chapter-content {\n  animation: fadeIn 0.3s ease-out;\n}\n\n/* Typography */\nh1 {\n  font-size: 2.5rem;\n  font-weight: bold;\n  margin-bottom: 1.5rem;\n  color: #1a1a1a;\n}\n\nh2 {\n  font-size: 2rem;\n  font-weight: 600;\n  margin: 2rem 0 1rem;\n  color: #2d2d2d;\n}\n\nh3 {\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin: 1.5rem 0 1rem;\n  color: #404040;\n}\n\np {\n  line-height: 1.7;\n  margin-bottom: 1rem;\n}\n\n/* Lists */\nul, ol {\n  margin: 1rem 0;\n  padding-left: 1.5rem;\n}\n\nli {\n  margin-bottom: 0.5rem;\n}\n\n/* Tables */\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin: 1rem 0;\n}\n\nth, td {\n  padding: 0.75rem;\n  border: 1px solid #e5e7eb;\n  text-align: left;\n}\n\nth {\n  background-color: #f3f4f6;\n  font-weight: 600;\n}\n\n/* Code examples */\n.code-example {\n  background-color: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.5rem;\n  padding: 1rem;\n  margin: 1rem 0;\n}\n\n.code-example pre {\n  margin: 0;\n}\n\n/* Callouts */\n.callout {\n  border-left: 4px solid #3b82f6;\n  background-color: #eff6ff;\n  padding: 1rem;\n  margin: 1rem 0;\n  border-radius: 0 0.5rem 0.5rem 0;\n}\n\n.callout.warning {\n  border-left-color: #f59e0b;\n  background-color: #fffbeb;\n}\n\n.callout.error {\n  border-left-color: #ef4444;\n  background-color: #fef2f2;\n}\n\n/* Interactive elements */\nbutton {\n  padding: 0.5rem 1rem;\n  background-color: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 0.375rem;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\nbutton:hover {\n  background-color: #2563eb;\n}\n\nbutton:disabled {\n  background-color: #9ca3af;\n  cursor: not-allowed;\n}\n\n/* Form elements */\ninput, textarea {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #d1d5db;\n  border-radius: 0.375rem;\n  margin-bottom: 1rem;\n}\n\ninput:focus, textarea:focus {\n  outline: none;\n  border-color: #3b82f6;\n  ring: 2px solid #93c5fd;\n} ",""]);const c=o}}]);