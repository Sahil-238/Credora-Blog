"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[27297],{27297:(e,t,a)=>{a.r(t),a.d(t,{default:()=>m});var n=a(96540),l=a.n(n),r=a(71181),s=a(84976),o=a(42644);const m=()=>l().createElement(r.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto p-6"},l().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"URL Module in Node.js"),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Introduction to URL Module"),l().createElement("p",{className:"text-gray-600 mb-4"},"The URL module in Node.js provides utilities for URL resolution and parsing. It offers both legacy API and newer WHATWG URL Standard API for working with URLs in a way that's consistent with web browsers."),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},l().createElement("div",{className:"flex items-start"},l().createElement(o.ayE,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),l().createElement("div",null,l().createElement("h3",{className:"font-semibold mb-2"},"Key Features"),l().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},l().createElement("li",null,"URL parsing and formatting"),l().createElement("li",null,"URL resolution and normalization"),l().createElement("li",null,"Query string handling"),l().createElement("li",null,"URL component manipulation"),l().createElement("li",null,"Support for both legacy and WHATWG URL API")))))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"WHATWG URL API"),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},l().createElement("div",{className:"flex items-start"},l().createElement(o.VeH,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),l().createElement("div",null,l().createElement("p",{className:"text-gray-600 mb-4"},"The modern WHATWG URL API provides a standardized way to work with URLs:"),l().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"const { URL } = require('url');\n\n// Create a new URL object\nconst myURL = new URL('https://example.com:8080/path?query=value#hash');\n\n// Access URL components\nconsole.log(myURL.href);      // https://example.com:8080/path?query=value#hash\nconsole.log(myURL.protocol);  // https:\nconsole.log(myURL.hostname);  // example.com\nconsole.log(myURL.port);      // 8080\nconsole.log(myURL.pathname);  // /path\nconsole.log(myURL.search);    // ?query=value\nconsole.log(myURL.hash);      // #hash\n\n// Modify URL components\nmyURL.pathname = '/new-path';\nmyURL.searchParams.append('key', 'value');\nconsole.log(myURL.href);\n\n// Working with search parameters\nconst params = myURL.searchParams;\nparams.append('page', '1');\nparams.set('limit', '10');\nparams.delete('query');\n\n// Iterate over search parameters\nfor (const [key, value] of params) {\n  console.log(`${key}: ${value}`);\n}"))))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Legacy URL API"),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},l().createElement("div",{className:"flex items-start"},l().createElement(o.CKj,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),l().createElement("div",null,l().createElement("p",{className:"text-gray-600 mb-4"},"The legacy URL API is still available but considered legacy:"),l().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"const url = require('url');\n\n// Parse URL using legacy API\nconst parsedUrl = url.parse('https://example.com/path?query=value', true);\nconsole.log(parsedUrl);\n// Output:\n// {\n//   protocol: 'https:',\n//   host: 'example.com',\n//   pathname: '/path',\n//   search: '?query=value',\n//   query: { query: 'value' },\n//   ...\n// }\n\n// Format URL object back to string\nconst urlString = url.format({\n  protocol: 'https',\n  hostname: 'example.com',\n  pathname: '/path',\n  query: { key: 'value' }\n});\nconsole.log(urlString);\n\n// Resolve URLs\nconst resolvedUrl = url.resolve('https://example.com/path/', './relative');\nconsole.log(resolvedUrl); // https://example.com/path/relative"))))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Working with URLSearchParams"),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},l().createElement("div",{className:"flex items-start"},l().createElement(o.VSk,{className:"w-6 h-6 text-blue-600 mr-3 mt-1"}),l().createElement("div",null,l().createElement("p",{className:"text-gray-600 mb-4"},"URLSearchParams provides a way to work with query strings:"),l().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"const { URLSearchParams } = require('url');\n\n// Create from string\nconst params = new URLSearchParams('key1=value1&key2=value2');\n\n// Create from object\nconst params2 = new URLSearchParams({\n  sort: 'desc',\n  page: '1',\n  limit: '10'\n});\n\n// Manipulate parameters\nparams.append('key3', 'value3');\nparams.set('key1', 'new-value');\nparams.delete('key2');\n\n// Check parameter existence\nconsole.log(params.has('key1'));     // true\nconsole.log(params.get('key1'));     // new-value\nconsole.log(params.getAll('key1'));  // ['new-value']\n\n// Iterate over parameters\nfor (const [key, value] of params) {\n  console.log(`${key}: ${value}`);\n}\n\n// Convert to string\nconsole.log(params.toString());  // key1=new-value&key3=value3\n\n// Sort parameters\nparams.sort();\n\n// Use with fetch API\nconst queryString = new URLSearchParams({\n  q: 'search term',\n  lang: 'en'\n}).toString();\n\nconst apiUrl = `https://api.example.com/search?${queryString}`;"))))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Common Use Cases"),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},l().createElement("div",{className:"space-y-4"},l().createElement("div",null,l().createElement("h3",{className:"font-semibold mb-2"},"API URL Building"),l().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"function buildApiUrl(baseUrl, path, params) {\n  const url = new URL(path, baseUrl);\n  Object.entries(params).forEach(([key, value]) => {\n    url.searchParams.append(key, value);\n  });\n  return url.toString();\n}\n\nconst apiUrl = buildApiUrl(\n  'https://api.example.com',\n  '/users',\n  { page: 1, limit: 10, sort: 'name' }\n);")),l().createElement("div",null,l().createElement("h3",{className:"font-semibold mb-2"},"URL Validation"),l().createElement("div",{className:"bg-gray-100 p-4 rounded font-mono text-sm"},"function isValidUrl(string) {\n  try {\n    new URL(string);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction isValidHttpUrl(string) {\n  try {\n    const url = new URL(string);\n    return url.protocol === 'http:' || url.protocol === 'https:';\n  } catch (err) {\n    return false;\n  }\n}"))))),l().createElement("section",{className:"mb-8"},l().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Best Practices"),l().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},l().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},l().createElement("li",null,"Use WHATWG URL API over legacy url.parse()"),l().createElement("li",null,"Always validate URLs before using them"),l().createElement("li",null,"Use URLSearchParams for query string manipulation"),l().createElement("li",null,"Handle URL encoding/decoding properly"),l().createElement("li",null,"Consider URL security implications"),l().createElement("li",null,"Use try-catch when parsing URLs"),l().createElement("li",null,"Normalize URLs before comparison"),l().createElement("li",null,"Be careful with relative URL resolution")))),l().createElement("div",{className:"mt-12 flex justify-between items-center"},l().createElement(s.N_,{to:"/nodejs-course/path-module",className:"text-blue-600 hover:text-blue-800"},"← Path Module"),l().createElement(s.N_,{to:"/nodejs-course/os-module",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"},"Next: OS Module →")))}}]);