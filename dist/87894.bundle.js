"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[87894],{87894:(e,n,t)=>{t.r(n),t.d(n,{default:()=>d});var a=t(96540),r=t.n(a),s=t(71181),o=t(42644),c=t(15235),l=t(90956),i=t(12198);const d=()=>{const e=[{id:"objects",title:"Objects and Prototypes",icon:r().createElement(o.X3y,null),code:'// Object Creation\nconst person = {\n  name: "John",\n  age: 30,\n  greet() {\n    return `Hello, I\'m ${this.name}`;\n  }\n};\n\n// Object Methods\nObject.keys(person);    // ["name", "age", "greet"]\nObject.values(person);  // ["John", 30, ƒ]\n\n// Prototypes\nfunction Person(name) {\n  this.name = name;\n}\n\nPerson.prototype.sayHello = function() {\n  return `Hello, ${this.name}`;\n};\n\nconst john = new Person("John");\nconsole.log(john.sayHello());  // "Hello, John"',explanation:"Advanced object concepts in JavaScript:\n• Object methods and properties\n• Prototypal inheritance\n• Constructor functions\n• The 'this' keyword\n• Object destructuring\n• Property descriptors"},{id:"arrays",title:"Advanced Array Methods",icon:r().createElement(o.s_k,null),code:"// Array Methods\nconst numbers = [1, 2, 3, 4, 5];\n\n// Map: Transform elements\nconst doubled = numbers.map(n => n * 2);\n\n// Filter: Select elements\nconst evens = numbers.filter(n => n % 2 === 0);\n\n// Reduce: Accumulate values\nconst sum = numbers.reduce((acc, n) => acc + n, 0);\n\n// Find and FindIndex\nconst found = numbers.find(n => n > 3);\nconst index = numbers.findIndex(n => n > 3);\n\n// Spread and Rest\nconst combined = [...numbers, 6, 7];\nconst [first, second, ...rest] = numbers;",explanation:"Modern array methods provide powerful ways to:\n• Transform data with map()\n• Filter elements with filter()\n• Accumulate values with reduce()\n• Search elements with find()\n• Destructure arrays\n• Use spread/rest operators"},{id:"classes",title:"Classes and OOP",icon:r().createElement(o.Ojn,null),code:"// Class Declaration\nclass Animal {\n  constructor(name) {\n    this.name = name;\n  }\n\n  speak() {\n    return `${this.name} makes a sound`;\n  }\n}\n\n// Inheritance\nclass Dog extends Animal {\n  constructor(name, breed) {\n    super(name);\n    this.breed = breed;\n  }\n\n  speak() {\n    return `${this.name} barks!`;\n  }\n}\n\n// Static Methods\nclass MathOperations {\n  static add(x, y) {\n    return x + y;\n  }\n}\n\n// Private Fields\nclass Counter {\n  #count = 0;\n  \n  increment() {\n    this.#count++;\n  }\n}",explanation:"Object-Oriented Programming in JavaScript:\n• Class syntax and constructors\n• Inheritance with extends\n• Method overriding\n• Static methods and properties\n• Private fields and methods\n• Getters and setters"},{id:"async",title:"Promises and Async/Await",icon:r().createElement(o.Ohp,null),code:"// Promises\nconst fetchData = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(\"Data received\");\n    }, 2000);\n  });\n};\n\n// Promise Chaining\nfetchData()\n  .then(data => console.log(data))\n  .catch(error => console.error(error));\n\n// Async/Await\nasync function getData() {\n  try {\n    const result = await fetchData();\n    console.log(result);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Promise.all\nconst promises = [\n  fetch('/api/users'),\n  fetch('/api/posts')\n];\n\nPromise.all(promises)\n  .then(([users, posts]) => {\n    // Handle both responses\n  });",explanation:"Asynchronous JavaScript features:\n• Promises for handling async operations\n• async/await for cleaner async code\n• Error handling with try/catch\n• Promise methods: all, race, allSettled\n• Async iteration\n• Event loop and microtasks"}];return r().createElement(s.P.div,{initial:{opacity:0},animate:{opacity:1},transition:{duration:.5}},r().createElement("h1",{className:"text-3xl font-bold mb-6"},"Advanced JavaScript Concepts"),r().createElement("p",{className:"text-gray-600 mb-8"},"Dive deep into advanced JavaScript concepts that will take your programming skills to the next level."),r().createElement("div",{className:"space-y-12"},e.map((e=>r().createElement(s.P.div,{key:e.id,initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"border border-gray-200 rounded-xl p-6 hover:border-blue-500 transition-colors"},r().createElement("div",{className:"flex items-center mb-4"},r().createElement("span",{className:"text-blue-600 mr-3"},e.icon),r().createElement("h2",{className:"text-xl font-semibold"},e.title)),r().createElement("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-6"},r().createElement("div",null,r().createElement("h3",{className:"text-lg font-medium mb-3"},"Example Code"),r().createElement(c.A,{language:"javascript",style:l.A,className:"rounded-lg"},e.code)),r().createElement("div",null,r().createElement("h3",{className:"text-lg font-medium mb-3"},"Explanation"),r().createElement("p",{className:"text-gray-600 whitespace-pre-line"},e.explanation))))))),r().createElement("div",{className:"mt-12 bg-purple-50 rounded-xl p-6"},r().createElement("h3",{className:"text-xl font-semibold mb-4"},"Advanced Challenges"),r().createElement("p",{className:"text-gray-600 mb-4"},"Put your advanced JavaScript knowledge to the test with these challenging exercises."),r().createElement("div",{className:"flex space-x-4"},r().createElement("button",{className:"bg-purple-600 text-white px-6 py-2 rounded-lg hover:bg-purple-700 transition-colors"},"Start Challenge"),r().createElement("button",{className:"border border-purple-600 text-purple-600 px-6 py-2 rounded-lg hover:bg-purple-50 transition-colors"},"View Solutions"))),r().createElement(i.default,null))}}}]);