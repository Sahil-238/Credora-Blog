"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[16959],{16959:(e,t,l)=>{l.r(t),l.d(t,{default:()=>i});var o=l(96540),n=l.n(o),a=l(71181),r=l(84976),s=l(58027),c=l(82355);const i=()=>n().createElement(a.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto p-6"},n().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"Protected Routes"),n().createElement("section",{className:"mb-8"},n().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Understanding Protected Routes"),n().createElement("p",{className:"text-gray-600 mb-4"},"Protected routes are routes that can only be accessed by authenticated users. They are essential for securing parts of your application and managing user access control."),n().createElement("div",{className:"bg-blue-50 border-l-4 border-blue-500 p-4 mb-6"},n().createElement("p",{className:"text-blue-700"},n().createElement("strong",null,"Key Concept:")," Protected routes work by checking authentication state before rendering the route's content, redirecting unauthorized users to a login page."))),n().createElement("section",{className:"mb-8"},n().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Authentication Context"),n().createElement("p",{className:"text-gray-600 mb-4"},"Before implementing protected routes, you need a way to manage authentication state. React Context is commonly used to provide authentication information throughout your app."),n().createElement("div",{className:"bg-gray-800 rounded-lg p-4 mb-6"},n().createElement(s.A,{language:"jsx",style:c.A},"// Auth Context\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const login = async (credentials) => {\n    // Implement login logic\n    const user = await loginAPI(credentials);\n    setUser(user);\n  };\n\n  const logout = () => {\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"))),n().createElement("section",{className:"mb-8"},n().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Basic Protected Route"),n().createElement("p",{className:"text-gray-600 mb-4"},"A protected route component wraps your route content and checks for authentication, redirecting to the login page if the user is not authenticated."),n().createElement("div",{className:"bg-gray-800 rounded-lg p-4 mb-6"},n().createElement(s.A,{language:"jsx",style:c.A},'// Protected Route Component\nconst ProtectedRoute = ({ children }) => {\n  const { user } = useAuth();\n  const location = useLocation();\n\n  if (!user) {\n    // Redirect to login page with return URL\n    return <Navigate to="/login" state={{ from: location }} replace />;\n  }\n\n  return children;\n};\n\n// Usage in Route Configuration\n<Routes>\n  <Route path="/login" element={<Login />} />\n  <Route\n    path="/dashboard"\n    element={\n      <ProtectedRoute>\n        <Dashboard />\n      </ProtectedRoute>\n    }\n  />\n</Routes>'))),n().createElement("section",{className:"mb-8"},n().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Role-Based Access Control"),n().createElement("p",{className:"text-gray-600 mb-4"},"For more granular control, you can implement role-based protected routes that check not only for authentication but also for specific user roles or permissions."),n().createElement("div",{className:"bg-gray-800 rounded-lg p-4 mb-6"},n().createElement(s.A,{language:"jsx",style:c.A},'// Role-Based Protected Route\nconst RoleProtectedRoute = ({ children, requiredRole }) => {\n  const { user } = useAuth();\n  const location = useLocation();\n\n  if (!user) {\n    return <Navigate to="/login" state={{ from: location }} replace />;\n  }\n\n  if (!user.roles.includes(requiredRole)) {\n    return <Navigate to="/unauthorized" replace />;\n  }\n\n  return children;\n};\n\n// Usage\n<Route\n  path="/admin"\n  element={\n    <RoleProtectedRoute requiredRole="admin">\n      <AdminDashboard />\n    </RoleProtectedRoute>\n  }\n/>'))),n().createElement("section",{className:"mb-8"},n().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Best Practices"),n().createElement("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6"},n().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},n().createElement("h3",{className:"font-medium text-lg mb-4"},"Security"),n().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},n().createElement("li",null,"Always verify tokens on the server"),n().createElement("li",null,"Use secure storage for tokens"),n().createElement("li",null,"Implement token refresh logic"),n().createElement("li",null,"Handle session timeouts gracefully"))),n().createElement("div",{className:"bg-white p-6 rounded-lg shadow-sm"},n().createElement("h3",{className:"font-medium text-lg mb-4"},"User Experience"),n().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},n().createElement("li",null,"Preserve intended destination"),n().createElement("li",null,"Show loading states"),n().createElement("li",null,"Provide clear error messages"),n().createElement("li",null,"Handle deep linking properly"))))),n().createElement("section",{className:"mb-8"},n().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Common Patterns"),n().createElement("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4"},n().createElement("div",{className:"bg-gray-50 p-4 rounded-lg"},n().createElement("h3",{className:"font-medium mb-2"},"Authentication Flow"),n().createElement("p",{className:"text-sm text-gray-600"},"Login → Token Storage → Protected Routes")),n().createElement("div",{className:"bg-gray-50 p-4 rounded-lg"},n().createElement("h3",{className:"font-medium mb-2"},"Permission Levels"),n().createElement("p",{className:"text-sm text-gray-600"},"User → Admin → Super Admin")),n().createElement("div",{className:"bg-gray-50 p-4 rounded-lg"},n().createElement("h3",{className:"font-medium mb-2"},"Route Groups"),n().createElement("p",{className:"text-sm text-gray-600"},"Public → Private → Admin Only")))),n().createElement("div",{className:"mt-12 flex justify-between items-center"},n().createElement(r.N_,{to:"/react-course/nested-routes",className:"text-blue-600 hover:text-blue-800"},"← Nested Routes"),n().createElement(r.N_,{to:"/react-course/navigation",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"},"Next: Navigation →")))},82355:(e,t,l)=>{l.d(t,{A:()=>o});const o={hljs:{display:"block",overflowX:"auto",padding:"0.5em",color:"#abb2bf",background:"#282c34"},"hljs-comment":{color:"#5c6370",fontStyle:"italic"},"hljs-quote":{color:"#5c6370",fontStyle:"italic"},"hljs-doctag":{color:"#c678dd"},"hljs-keyword":{color:"#c678dd"},"hljs-formula":{color:"#c678dd"},"hljs-section":{color:"#e06c75"},"hljs-name":{color:"#e06c75"},"hljs-selector-tag":{color:"#e06c75"},"hljs-deletion":{color:"#e06c75"},"hljs-subst":{color:"#e06c75"},"hljs-literal":{color:"#56b6c2"},"hljs-string":{color:"#98c379"},"hljs-regexp":{color:"#98c379"},"hljs-addition":{color:"#98c379"},"hljs-attribute":{color:"#98c379"},"hljs-meta-string":{color:"#98c379"},"hljs-built_in":{color:"#e6c07b"},"hljs-class .hljs-title":{color:"#e6c07b"},"hljs-attr":{color:"#d19a66"},"hljs-variable":{color:"#d19a66"},"hljs-template-variable":{color:"#d19a66"},"hljs-type":{color:"#d19a66"},"hljs-selector-class":{color:"#d19a66"},"hljs-selector-attr":{color:"#d19a66"},"hljs-selector-pseudo":{color:"#d19a66"},"hljs-number":{color:"#d19a66"},"hljs-symbol":{color:"#61aeee"},"hljs-bullet":{color:"#61aeee"},"hljs-link":{color:"#61aeee",textDecoration:"underline"},"hljs-meta":{color:"#61aeee"},"hljs-selector-id":{color:"#61aeee"},"hljs-title":{color:"#61aeee"},"hljs-emphasis":{fontStyle:"italic"},"hljs-strong":{fontWeight:"bold"}}}}]);