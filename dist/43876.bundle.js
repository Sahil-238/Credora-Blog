"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[43876],{43876:(e,t,n)=>{n.r(t),n.d(t,{default:()=>l});var a=n(96540),o=n.n(a),r=n(71181),s=n(42644),i=n(84976);const l=()=>{const[e,t]=(0,a.useState)("basics"),n={basics:{title:"Basic Routing",code:'import { BrowserRouter, Routes, Route, Link } from \'react-router-dom\';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <nav>\n        <Link to="/">Home</Link>\n        <Link to="/about">About</Link>\n        <Link to="/contact">Contact</Link>\n      </nav>\n\n      <Routes>\n        <Route path="/" element={<Home />} />\n        <Route path="/about" element={<About />} />\n        <Route path="/contact" element={<Contact />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}',explanation:"Basic routing setup with React Router v6 including navigation and route definitions."},params:{title:"Route Parameters",code:'// Dynamic Routes\n<Routes>\n  <Route path="/users" element={<UserList />} />\n  <Route path="/users/:id" element={<UserProfile />} />\n  <Route path="/posts/:category/:id" element={<Post />} />\n</Routes>\n\n// Accessing Parameters\nfunction UserProfile() {\n  const { id } = useParams();\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    fetchUser(id).then(setUser);\n  }, [id]);\n\n  if (!user) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h1>{user.name}</h1>\n      <p>{user.email}</p>\n    </div>\n  );\n}\n\n// Optional Parameters\n<Route path="/products/:category?/:id?" element={<Product />} />\n\nfunction Product() {\n  const { category, id } = useParams();\n  \n  return (\n    <div>\n      {category && <h2>Category: {category}</h2>}\n      {id && <h3>Product ID: {id}</h3>}\n    </div>\n  );\n}',explanation:"Route parameters allow dynamic routing based on URL segments."},nested:{title:"Nested Routes",code:'function Dashboard() {\n  return (\n    <div>\n      <nav>\n        <Link to="profile">Profile</Link>\n        <Link to="settings">Settings</Link>\n      </nav>\n\n      <Routes>\n        <Route path="/" element={<DashboardHome />} />\n        <Route path="profile" element={<Profile />} />\n        <Route path="settings" element={<Settings />} />\n      </Routes>\n    </div>\n  );\n}\n\n// App Routes\n<Routes>\n  <Route path="/" element={<Home />} />\n  <Route path="/dashboard/*" element={<Dashboard />} />\n</Routes>\n\n// Outlet Component\nfunction Layout() {\n  return (\n    <div>\n      <header>Header</header>\n      <Outlet />\n      <footer>Footer</footer>\n    </div>\n  );\n}\n\n<Routes>\n  <Route element={<Layout />}>\n    <Route path="/" element={<Home />} />\n    <Route path="/about" element={<About />} />\n    <Route path="/contact" element={<Contact />} />\n  </Route>\n</Routes>',explanation:"Nested routes allow for complex routing hierarchies and layouts."},navigation:{title:"Programmatic Navigation",code:"import { useNavigate, useLocation } from 'react-router-dom';\n\nfunction LoginForm() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await login(formData);\n      navigate(from, { replace: true });\n    } catch (error) {\n      // Handle error\n    }\n  };\n\n  return <form onSubmit={handleSubmit}>{/* Form fields */}</form>;\n}\n\n// Navigation with State\nfunction ProductList() {\n  const navigate = useNavigate();\n\n  const viewProduct = (product) => {\n    navigate(`/products/${product.id}`, {\n      state: { product }\n    });\n  };\n\n  return (\n    <div>\n      {products.map(product => (\n        <button onClick={() => viewProduct(product)}>\n          View {product.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\n// Accessing Navigation State\nfunction ProductDetail() {\n  const location = useLocation();\n  const { product } = location.state || {};\n\n  if (!product) return <div>Product not found</div>;\n\n  return (\n    <div>\n      <h1>{product.name}</h1>\n      <p>{product.description}</p>\n    </div>\n  );\n}",explanation:"Programmatic navigation allows for dynamic routing based on user actions or application state."},protection:{title:"Protected Routes",code:'import { Navigate, useLocation } from \'react-router-dom\';\n\nfunction PrivateRoute({ children }) {\n  const auth = useAuth(); // Custom auth hook\n  const location = useLocation();\n\n  if (!auth.user) {\n    return <Navigate to="/login" state={{ from: location }} replace />;\n  }\n\n  return children;\n}\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path="/login" element={<Login />} />\n      <Route\n        path="/dashboard"\n        element={\n          <PrivateRoute>\n            <Dashboard />\n          </PrivateRoute>\n        }\n      />\n    </Routes>\n  );\n}\n\n// Role-based Protection\nfunction AdminRoute({ children }) {\n  const auth = useAuth();\n  const location = useLocation();\n\n  if (!auth.user) {\n    return <Navigate to="/login" state={{ from: location }} replace />;\n  }\n\n  if (auth.user.role !== \'admin\') {\n    return <Navigate to="/unauthorized" replace />;\n  }\n\n  return children;\n}\n\n// Multiple Layout Protection\nfunction App() {\n  return (\n    <Routes>\n      <Route element={<PublicLayout />}>\n        <Route path="/login" element={<Login />} />\n        <Route path="/register" element={<Register />} />\n      </Route>\n\n      <Route\n        element={\n          <PrivateRoute>\n            <PrivateLayout />\n          </PrivateRoute>\n        }\n      >\n        <Route path="/dashboard" element={<Dashboard />} />\n        <Route path="/profile" element={<Profile />} />\n        \n        <Route\n          element={\n            <AdminRoute>\n              <AdminLayout />\n            </AdminRoute>\n          }\n        >\n          <Route path="/admin/*" element={<AdminPanel />} />\n        </Route>\n      </Route>\n    </Routes>\n  );\n}',explanation:"Protected routes ensure that certain routes are only accessible to authenticated or authorized users."}};return o().createElement(r.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto"},o().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"Routing in React"),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Understanding Routing"),o().createElement("p",{className:"text-gray-600 mb-4"},"React Router enables navigation between different components in a React application, creating a single-page application experience with multiple views."),o().createElement("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4"},o().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},o().createElement(s.oUk,{className:"text-2xl text-blue-600 mb-2"}),o().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Navigation"),o().createElement("p",{className:"text-gray-600"},"Handle URL-based navigation")),o().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},o().createElement(s.pcC,{className:"text-2xl text-blue-600 mb-2"}),o().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Protection"),o().createElement("p",{className:"text-gray-600"},"Secure routes and redirects")),o().createElement("div",{className:"bg-white p-4 rounded-lg shadow"},o().createElement(s.ayE,{className:"text-2xl text-blue-600 mb-2"}),o().createElement("h3",{className:"text-lg font-semibold text-gray-700 mb-2"},"Dynamic"),o().createElement("p",{className:"text-gray-600"},"Handle dynamic route parameters")))),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Routing Examples"),o().createElement("div",{className:"bg-white rounded-lg shadow overflow-hidden"},o().createElement("div",{className:"flex border-b overflow-x-auto"},Object.entries(n).map((n=>{let[a,r]=n;return o().createElement("button",{key:a,className:"px-6 py-3 whitespace-nowrap ".concat(e===a?"bg-blue-50 text-blue-600 border-b-2 border-blue-600":"text-gray-600 hover:bg-gray-50"),onClick:()=>t(a)},r.title)}))),o().createElement("div",{className:"p-6"},o().createElement("pre",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg font-mono text-sm mb-4"},n[e].code),o().createElement("p",{className:"text-gray-600"},n[e].explanation)))),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Routing Best Practices"),o().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},o().createElement("ul",{className:"space-y-4"},o().createElement("li",{className:"flex items-start"},o().createElement("span",{className:"text-blue-600 mr-2"},"•"),o().createElement("div",null,o().createElement("h3",{className:"font-semibold text-gray-700"},"Organize Routes"),o().createElement("p",{className:"text-gray-600"},"Keep route definitions organized and maintainable"))),o().createElement("li",{className:"flex items-start"},o().createElement("span",{className:"text-blue-600 mr-2"},"•"),o().createElement("div",null,o().createElement("h3",{className:"font-semibold text-gray-700"},"Handle Not Found"),o().createElement("p",{className:"text-gray-600"},"Always provide a fallback route for undefined paths"))),o().createElement("li",{className:"flex items-start"},o().createElement("span",{className:"text-blue-600 mr-2"},"•"),o().createElement("div",null,o().createElement("h3",{className:"font-semibold text-gray-700"},"Protect Routes"),o().createElement("p",{className:"text-gray-600"},"Implement proper authentication and authorization"))),o().createElement("li",{className:"flex items-start"},o().createElement("span",{className:"text-blue-600 mr-2"},"•"),o().createElement("div",null,o().createElement("h3",{className:"font-semibold text-gray-700"},"Loading States"),o().createElement("p",{className:"text-gray-600"},"Show loading indicators during route transitions")))))),o().createElement("section",{className:"mb-8"},o().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Exercise"),o().createElement("div",{className:"bg-white p-6 rounded-lg shadow"},o().createElement("p",{className:"text-gray-600 mb-4"},"Create a blog application with the following routing features:"),o().createElement("div",{className:"bg-gray-100 p-4 rounded"},o().createElement("p",{className:"text-gray-700 font-semibold"},"Requirements:"),o().createElement("ul",{className:"list-disc list-inside text-gray-600 space-y-2"},o().createElement("li",null,"Public routes (Home, Blog List, Post View)"),o().createElement("li",null,"Protected routes (Admin Dashboard, Create/Edit Post)"),o().createElement("li",null,"Dynamic post routes with categories"),o().createElement("li",null,"Nested routes for admin section"),o().createElement("li",null,"Loading states and error boundaries"),o().createElement("li",null,"404 page for undefined routes"))))),o().createElement("div",{className:"mt-12 flex justify-between items-center"},o().createElement(i.N_,{to:"/react-course/hooks",className:"text-blue-600 hover:text-blue-800"},"← Previous: Hooks"),o().createElement(i.N_,{to:"/react-course/state-management",className:"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"},"Next: State Management →")))}}}]);