"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[45332],{45332:(e,l,s)=>{s.r(l),s.d(l,{default:()=>i});var n=s(96540),c=s.n(n),d=s(12198);const i=()=>c().createElement("div",{className:"container mx-auto px-4 py-8"},c().createElement("h1",{className:"text-3xl font-bold mb-6"},"Grid Columns"),c().createElement("div",{className:"mb-8"},c().createElement("h2",{className:"text-2xl font-semibold mb-4"},"Basic Grid Columns"),c().createElement("div",{className:"bg-gray-100 p-4 rounded"},c().createElement("pre",{className:"bg-white p-3 rounded"},'<div class="container">\n  \x3c!-- Equal width columns --\x3e\n  <div class="row">\n    <div class="col">Column</div>\n    <div class="col">Column</div>\n    <div class="col">Column</div>\n  </div>\n\n  \x3c!-- Specified width columns --\x3e\n  <div class="row">\n    <div class="col-4">Column</div>\n    <div class="col-4">Column</div>\n    <div class="col-4">Column</div>\n  </div>\n</div>'))),c().createElement("div",{className:"mb-8"},c().createElement("h2",{className:"text-2xl font-semibold mb-4"},"Responsive Columns"),c().createElement("div",{className:"bg-gray-100 p-4 rounded"},c().createElement("pre",{className:"bg-white p-3 rounded"},'<div class="container">\n  <div class="row">\n    \x3c!-- Stack on mobile, side by side on desktop --\x3e\n    <div class="col-12 col-md-6">Column</div>\n    <div class="col-12 col-md-6">Column</div>\n  </div>\n\n  \x3c!-- Responsive column widths --\x3e\n  <div class="row">\n    <div class="col-12 col-sm-6 col-md-4 col-lg-3">Column</div>\n    <div class="col-12 col-sm-6 col-md-4 col-lg-3">Column</div>\n    <div class="col-12 col-sm-6 col-md-4 col-lg-3">Column</div>\n    <div class="col-12 col-sm-6 col-md-4 col-lg-3">Column</div>\n  </div>\n</div>'))),c().createElement("div",{className:"mb-8"},c().createElement("h2",{className:"text-2xl font-semibold mb-4"},"Auto-layout Columns"),c().createElement("div",{className:"bg-gray-100 p-4 rounded"},c().createElement("pre",{className:"bg-white p-3 rounded"},'\x3c!-- Equal-width --\x3e\n<div class="row">\n  <div class="col">1 of 3</div>\n  <div class="col">2 of 3</div>\n  <div class="col">3 of 3</div>\n</div>\n\n\x3c!-- One column width --\x3e\n<div class="row">\n  <div class="col">1 of 3</div>\n  <div class="col-6">2 of 3 (wider)</div>\n  <div class="col">3 of 3</div>\n</div>\n\n\x3c!-- Variable width content --\x3e\n<div class="row justify-content-md-center">\n  <div class="col col-lg-2">1 of 3</div>\n  <div class="col-md-auto">Variable width content</div>\n  <div class="col col-lg-2">3 of 3</div>\n</div>'))),c().createElement("div",{className:"mb-8"},c().createElement("h2",{className:"text-2xl font-semibold mb-4"},"Column Ordering"),c().createElement("div",{className:"bg-gray-100 p-4 rounded"},c().createElement("pre",{className:"bg-white p-3 rounded"},'\x3c!-- Order classes --\x3e\n<div class="row">\n  <div class="col order-last">First, but last</div>\n  <div class="col">Second, but unordered</div>\n  <div class="col order-first">Third, but first</div>\n</div>\n\n\x3c!-- Responsive ordering --\x3e\n<div class="row">\n  <div class="col-md-4 order-md-2">First, but second on md</div>\n  <div class="col-md-4 order-md-3">Second, but third on md</div>\n  <div class="col-md-4 order-md-1">Third, but first on md</div>\n</div>'))),c().createElement("div",{className:"mb-8"},c().createElement("h2",{className:"text-2xl font-semibold mb-4"},"Column Offset"),c().createElement("div",{className:"bg-gray-100 p-4 rounded"},c().createElement("pre",{className:"bg-white p-3 rounded"},'\x3c!-- Offset columns --\x3e\n<div class="row">\n  <div class="col-md-4">col-md-4</div>\n  <div class="col-md-4 offset-md-4">col-md-4 offset-md-4</div>\n</div>\n\n\x3c!-- Responsive offset --\x3e\n<div class="row">\n  <div class="col-sm-5 col-md-6">col-sm-5 col-md-6</div>\n  <div class="col-sm-5 offset-sm-2 col-md-6 offset-md-0">col-sm-5 offset-sm-2</div>\n</div>'))),c().createElement("div",{className:"mb-8"},c().createElement("h2",{className:"text-2xl font-semibold mb-4"},"Column Alignment"),c().createElement("div",{className:"bg-gray-100 p-4 rounded"},c().createElement("pre",{className:"bg-white p-3 rounded"},'\x3c!-- Vertical alignment --\x3e\n<div class="row align-items-start">\n  <div class="col">Top aligned</div>\n  <div class="col">Top aligned</div>\n</div>\n\n<div class="row align-items-center">\n  <div class="col">Center aligned</div>\n  <div class="col">Center aligned</div>\n</div>\n\n<div class="row align-items-end">\n  <div class="col">Bottom aligned</div>\n  <div class="col">Bottom aligned</div>\n</div>\n\n\x3c!-- Individual column alignment --\x3e\n<div class="row">\n  <div class="col align-self-start">Top</div>\n  <div class="col align-self-center">Center</div>\n  <div class="col align-self-end">Bottom</div>\n</div>'))),c().createElement("div",{className:"mb-8"},c().createElement("h2",{className:"text-2xl font-semibold mb-4"},"Nesting"),c().createElement("div",{className:"bg-gray-100 p-4 rounded"},c().createElement("pre",{className:"bg-white p-3 rounded"},'<div class="row">\n  <div class="col-sm-9">\n    Level 1: col-sm-9\n    <div class="row">\n      <div class="col-8 col-sm-6">Level 2: col-8 col-sm-6</div>\n      <div class="col-4 col-sm-6">Level 2: col-4 col-sm-6</div>\n    </div>\n  </div>\n</div>'))),c().createElement("div",{className:"mb-8"},c().createElement("h2",{className:"text-2xl font-semibold mb-4"},"Best Practices"),c().createElement("ul",{className:"list-disc pl-6 space-y-2"},c().createElement("li",null,"Use the 12-column grid system effectively"),c().createElement("li",null,"Plan responsive breakpoints carefully"),c().createElement("li",null,"Consider mobile-first design"),c().createElement("li",null,"Use auto-layout columns when possible"),c().createElement("li",null,"Maintain consistent column patterns"),c().createElement("li",null,"Use appropriate column ordering for different screen sizes"),c().createElement("li",null,"Keep nesting levels manageable"),c().createElement("li",null,"Use offset columns judiciously"))),c().createElement(d.default,null))}}]);