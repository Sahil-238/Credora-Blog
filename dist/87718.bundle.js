"use strict";(self.webpackChunkcredora_blog=self.webpackChunkcredora_blog||[]).push([[87718],{87718:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var a=n(96540),s=n.n(a),r=n(71181),l=n(84976);const o=()=>s().createElement(r.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"max-w-4xl mx-auto p-6"},s().createElement("h1",{className:"text-3xl font-bold text-gray-800 mb-6"},"React Best Practices"),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Understanding Best Practices"),s().createElement("p",{className:"text-gray-600 mb-4"},"Best practices in React development are proven approaches that help you write cleaner, more maintainable, and performant code. Following these practices will make your applications more scalable, easier to debug, and help your team collaborate more effectively.")),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Component Structure & Organization"),s().createElement("div",{className:"bg-blue-50 p-6 rounded-lg mb-4"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"1. Component Naming"),s().createElement("div",{className:"grid md:grid-cols-2 gap-4"},s().createElement("div",{className:"bg-green-50 p-4 rounded-lg"},s().createElement("h4",{className:"font-semibold text-green-800 mb-2"},"✅ Good"),s().createElement("pre",{className:"bg-green-100 p-3 rounded text-sm"},"// PascalCase for components\nconst UserProfile = () => { ... };\nconst ProductCard = () => { ... };\nconst NavigationBar = () => { ... };")),s().createElement("div",{className:"bg-red-50 p-4 rounded-lg"},s().createElement("h4",{className:"font-semibold text-red-800 mb-2"},"❌ Avoid"),s().createElement("pre",{className:"bg-red-100 p-3 rounded text-sm"},"// camelCase or lowercase\nconst userProfile = () => { ... };\nconst productcard = () => { ... };\nconst navigation_bar = () => { ... };")))),s().createElement("div",{className:"bg-blue-50 p-6 rounded-lg mb-4"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"2. File Organization"),s().createElement("pre",{className:"bg-white p-4 rounded border text-sm overflow-x-auto"},"src/\n├── components/\n│   ├── common/\n│   │   ├── Button/\n│   │   │   ├── Button.jsx\n│   │   │   ├── Button.module.css\n│   │   │   └── index.js\n│   │   └── Modal/\n│   └── features/\n│       ├── UserProfile/\n│       └── ProductList/\n├── hooks/\n├── services/\n├── utils/\n└── constants/")),s().createElement("div",{className:"bg-blue-50 p-6 rounded-lg"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"3. Component Size"),s().createElement("p",{className:"text-gray-600 mb-3"},"Keep components small and focused on a single responsibility:"),s().createElement("div",{className:"grid md:grid-cols-2 gap-4"},s().createElement("div",{className:"bg-green-50 p-4 rounded-lg"},s().createElement("h4",{className:"font-semibold text-green-800 mb-2"},"✅ Good - Single Responsibility"),s().createElement("pre",{className:"bg-green-100 p-3 rounded text-sm"},'const UserAvatar = ({ user }) => (\n  <img \n    src={user.avatar} \n    alt={user.name}\n    className="avatar"\n  />\n);\n\nconst UserInfo = ({ user }) => (\n  <div>\n    <h3>{user.name}</h3>\n    <p>{user.email}</p>\n  </div>\n);')),s().createElement("div",{className:"bg-red-50 p-4 rounded-lg"},s().createElement("h4",{className:"font-semibold text-red-800 mb-2"},"❌ Avoid - Too Many Responsibilities"),s().createElement("pre",{className:"bg-red-100 p-3 rounded text-sm"},"const UserComponent = ({ user }) => (\n  <div>\n    <img src={user.avatar} alt={user.name} />\n    <h3>{user.name}</h3>\n    <p>{user.email}</p>\n    <button onClick={handleEdit}>Edit</button>\n    <button onClick={handleDelete}>Delete</button>\n    <form onSubmit={handleSubmit}>\n      {/* Large form */}\n    </form>\n  </div>\n);"))))),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"State Management Best Practices"),s().createElement("div",{className:"bg-yellow-50 p-6 rounded-lg mb-4"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"1. State Placement"),s().createElement("p",{className:"text-gray-600 mb-3"},"Keep state as close to where it's used as possible:"),s().createElement("div",{className:"grid md:grid-cols-2 gap-4"},s().createElement("div",{className:"bg-green-50 p-4 rounded-lg"},s().createElement("h4",{className:"font-semibold text-green-800 mb-2"},"✅ Good - Local State"),s().createElement("pre",{className:"bg-green-100 p-3 rounded text-sm"},"const SearchInput = () => {\n  const [query, setQuery] = useState('');\n  \n  return (\n    <input\n      value={query}\n      onChange={(e) => setQuery(e.target.value)}\n      placeholder=\"Search...\"\n    />\n  );\n};")),s().createElement("div",{className:"bg-red-50 p-4 rounded-lg"},s().createElement("h4",{className:"font-semibold text-red-800 mb-2"},"❌ Avoid - Unnecessary Lifting"),s().createElement("pre",{className:"bg-red-100 p-3 rounded text-sm"},"// Don't lift state if only one component uses it\nconst Parent = () => {\n  const [query, setQuery] = useState('');\n  \n  return (\n    <div>\n      <SearchInput \n        query={query} \n        setQuery={setQuery} \n      />\n    </div>\n  );\n};")))),s().createElement("div",{className:"bg-yellow-50 p-6 rounded-lg mb-4"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"2. State Updates"),s().createElement("div",{className:"grid md:grid-cols-2 gap-4"},s().createElement("div",{className:"bg-green-50 p-4 rounded-lg"},s().createElement("h4",{className:"font-semibold text-green-800 mb-2"},"✅ Good - Immutable Updates"),s().createElement("pre",{className:"bg-green-100 p-3 rounded text-sm"},"// Array updates\nsetItems([...items, newItem]);\nsetItems(items.filter(item => item.id !== id));\n\n// Object updates\nsetUser({ ...user, name: 'New Name' });\nsetUser(prev => ({ ...prev, age: prev.age + 1 }));")),s().createElement("div",{className:"bg-red-50 p-4 rounded-lg"},s().createElement("h4",{className:"font-semibold text-red-800 mb-2"},"❌ Avoid - Mutations"),s().createElement("pre",{className:"bg-red-100 p-3 rounded text-sm"},"// Don't mutate state directly\nitems.push(newItem);\nsetItems(items);\n\nuser.name = 'New Name';\nsetUser(user);")))),s().createElement("div",{className:"bg-yellow-50 p-6 rounded-lg"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"3. Complex State with useReducer"),s().createElement("pre",{className:"bg-white p-4 rounded border text-sm overflow-x-auto"},"const initialState = { count: 0, loading: false, error: null };\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment':\n      return { ...state, count: state.count + 1 };\n    case 'decrement':\n      return { ...state, count: state.count - 1 };\n    case 'set_loading':\n      return { ...state, loading: action.payload };\n    case 'set_error':\n      return { ...state, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Counter = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  \n  return (\n    <div>\n      <p>Count: {state.count}</p>\n      <button onClick={() => dispatch({ type: 'increment' })}>+</button>\n      <button onClick={() => dispatch({ type: 'decrement' })}>-</button>\n    </div>\n  );\n};"))),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Performance Best Practices"),s().createElement("div",{className:"bg-purple-50 p-6 rounded-lg mb-4"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"1. Memoization"),s().createElement("div",{className:"space-y-4"},s().createElement("div",null,s().createElement("h4",{className:"font-semibold mb-2"},"React.memo for Components"),s().createElement("pre",{className:"bg-white p-3 rounded border text-sm overflow-x-auto"},"const ExpensiveComponent = React.memo(({ data, onUpdate }) => {\n  return (\n    <div>\n      {data.map(item => (\n        <div key={item.id}>{item.name}</div>\n      ))}\n    </div>\n  );\n});\n\n// Only re-renders when props actually change")),s().createElement("div",null,s().createElement("h4",{className:"font-semibold mb-2"},"useMemo for Expensive Calculations"),s().createElement("pre",{className:"bg-white p-3 rounded border text-sm overflow-x-auto"},"const ExpensiveList = ({ items, filter }) => {\n  const filteredItems = useMemo(() => {\n    return items.filter(item => \n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }, [items, filter]);\n  \n  return (\n    <ul>\n      {filteredItems.map(item => (\n        <li key={item.id}>{item.name}</li>\n      ))}\n    </ul>\n  );\n};")),s().createElement("div",null,s().createElement("h4",{className:"font-semibold mb-2"},"useCallback for Function References"),s().createElement("pre",{className:"bg-white p-3 rounded border text-sm overflow-x-auto"},"const Parent = () => {\n  const [count, setCount] = useState(0);\n  const [name, setName] = useState('');\n  \n  const handleClick = useCallback(() => {\n    setCount(prev => prev + 1);\n  }, []); // Stable reference\n  \n  return (\n    <div>\n      <input value={name} onChange={(e) => setName(e.target.value)} />\n      <Child onClick={handleClick} />\n    </div>\n  );\n};")))),s().createElement("div",{className:"bg-purple-50 p-6 rounded-lg mb-4"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"2. Lazy Loading"),s().createElement("pre",{className:"bg-white p-4 rounded border text-sm overflow-x-auto"},"import { lazy, Suspense } from 'react';\n\n// Lazy load components\nconst LazyComponent = lazy(() => import('./LazyComponent'));\n\nconst App = () => (\n  <div>\n    <Suspense fallback={<div>Loading...</div>}>\n      <LazyComponent />\n    </Suspense>\n  </div>\n);\n\n// Code splitting at route level\nconst Home = lazy(() => import('./pages/Home'));\nconst About = lazy(() => import('./pages/About'));")),s().createElement("div",{className:"bg-purple-50 p-6 rounded-lg"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"3. Virtualization for Large Lists"),s().createElement("pre",{className:"bg-white p-4 rounded border text-sm overflow-x-auto"},"import { FixedSizeList as List } from 'react-window';\n\nconst VirtualizedList = ({ items }) => {\n  const Row = ({ index, style }) => (\n    <div style={style}>\n      {items[index].name}\n    </div>\n  );\n  \n  return (\n    <List\n      height={400}\n      itemCount={items.length}\n      itemSize={50}\n      width=\"100%\"\n    >\n      {Row}\n    </List>\n  );\n};"))),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Props and PropTypes"),s().createElement("div",{className:"bg-green-50 p-6 rounded-lg mb-4"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"1. Props Destructuring"),s().createElement("div",{className:"grid md:grid-cols-2 gap-4"},s().createElement("div",{className:"bg-green-100 p-4 rounded-lg"},s().createElement("h4",{className:"font-semibold text-green-800 mb-2"},"✅ Good"),s().createElement("pre",{className:"bg-white p-3 rounded text-sm"},"const UserCard = ({ name, email, avatar }) => (\n  <div>\n    <img src={avatar} alt={name} />\n    <h3>{name}</h3>\n    <p>{email}</p>\n  </div>\n);")),s().createElement("div",{className:"bg-red-100 p-4 rounded-lg"},s().createElement("h4",{className:"font-semibold text-red-800 mb-2"},"❌ Avoid"),s().createElement("pre",{className:"bg-white p-3 rounded text-sm"},"const UserCard = (props) => (\n  <div>\n    <img src={props.avatar} alt={props.name} />\n    <h3>{props.name}</h3>\n    <p>{props.email}</p>\n  </div>\n);")))),s().createElement("div",{className:"bg-green-50 p-6 rounded-lg mb-4"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"2. Default Props"),s().createElement("pre",{className:"bg-white p-4 rounded border text-sm overflow-x-auto"},"const Button = ({ \n  children, \n  variant = 'primary', \n  size = 'medium',\n  disabled = false,\n  onClick \n}) => (\n  <button\n    className={`btn btn-${variant} btn-${size}`}\n    disabled={disabled}\n    onClick={onClick}\n  >\n    {children}\n  </button>\n);")),s().createElement("div",{className:"bg-green-50 p-6 rounded-lg"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"3. TypeScript for Props (Recommended)"),s().createElement("pre",{className:"bg-white p-4 rounded border text-sm overflow-x-auto"},'interface UserCardProps {\n  name: string;\n  email: string;\n  avatar: string;\n  isOnline?: boolean;\n  onClick?: () => void;\n}\n\nconst UserCard: React.FC<UserCardProps> = ({ \n  name, \n  email, \n  avatar, \n  isOnline = false,\n  onClick \n}) => (\n  <div onClick={onClick}>\n    <img src={avatar} alt={name} />\n    <h3>{name}</h3>\n    <p>{email}</p>\n    {isOnline && <span className="online-indicator" />}\n  </div>\n);'))),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Custom Hooks Best Practices"),s().createElement("div",{className:"bg-indigo-50 p-6 rounded-lg mb-4"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"1. Single Responsibility"),s().createElement("pre",{className:"bg-white p-4 rounded border text-sm overflow-x-auto"},"// Good: Focused on one concern\nconst useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      setStoredValue(value);\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n};")),s().createElement("div",{className:"bg-indigo-50 p-6 rounded-lg mb-4"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"2. Consistent Return Values"),s().createElement("pre",{className:"bg-white p-4 rounded border text-sm overflow-x-auto"},"// Good: Consistent object return\nconst useApi = (url) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // ... fetch logic\n  \n  return { data, loading, error, refetch };\n};\n\n// Good: Consistent array return\nconst useToggle = (initialValue = false) => {\n  const [value, setValue] = useState(initialValue);\n  \n  const toggle = useCallback(() => setValue(v => !v), []);\n  const setTrue = useCallback(() => setValue(true), []);\n  const setFalse = useCallback(() => setValue(false), []);\n  \n  return [value, { toggle, setTrue, setFalse }];\n};")),s().createElement("div",{className:"bg-indigo-50 p-6 rounded-lg"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"3. Error Handling"),s().createElement("pre",{className:"bg-white p-4 rounded border text-sm overflow-x-auto"},"const useAsyncOperation = () => {\n  const [state, setState] = useState({\n    data: null,\n    loading: false,\n    error: null\n  });\n  \n  const execute = useCallback(async (asyncFunction) => {\n    setState({ data: null, loading: true, error: null });\n    \n    try {\n      const data = await asyncFunction();\n      setState({ data, loading: false, error: null });\n      return data;\n    } catch (error) {\n      setState({ data: null, loading: false, error });\n      throw error;\n    }\n  }, []);\n  \n  return { ...state, execute };\n};"))),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Code Quality & Testing"),s().createElement("div",{className:"bg-orange-50 p-6 rounded-lg mb-4"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"1. ESLint and Prettier"),s().createElement("pre",{className:"bg-white p-4 rounded border text-sm overflow-x-auto"},"// .eslintrc.js\nmodule.exports = {\n  extends: [\n    'react-app',\n    'react-app/jest',\n    'plugin:react-hooks/recommended'\n  ],\n  rules: {\n    'react-hooks/exhaustive-deps': 'warn',\n    'no-unused-vars': 'error',\n    'prefer-const': 'error'\n  }\n};\n\n// .prettierrc\n{\n  \"semi\": true,\n  \"trailingComma\": \"es5\",\n  \"singleQuote\": true,\n  \"printWidth\": 80,\n  \"tabWidth\": 2\n}")),s().createElement("div",{className:"bg-orange-50 p-6 rounded-lg mb-4"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"2. Component Testing"),s().createElement("pre",{className:"bg-white p-4 rounded border text-sm overflow-x-auto"},"import { render, screen, fireEvent } from '@testing-library/react';\nimport Counter from './Counter';\n\ndescribe('Counter', () => {\n  test('renders initial count', () => {\n    render(<Counter initialCount={0} />);\n    expect(screen.getByText('Count: 0')).toBeInTheDocument();\n  });\n  \n  test('increments count when button clicked', () => {\n    render(<Counter initialCount={0} />);\n    const button = screen.getByText('Increment');\n    fireEvent.click(button);\n    expect(screen.getByText('Count: 1')).toBeInTheDocument();\n  });\n});")),s().createElement("div",{className:"bg-orange-50 p-6 rounded-lg"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"3. Accessibility"),s().createElement("pre",{className:"bg-white p-4 rounded border text-sm overflow-x-auto"},'const AccessibleButton = ({ children, onClick, disabled }) => (\n  <button\n    onClick={onClick}\n    disabled={disabled}\n    aria-label={typeof children === \'string\' ? children : undefined}\n    className="btn"\n  >\n    {children}\n  </button>\n);\n\nconst AccessibleForm = () => (\n  <form>\n    <label htmlFor="email">Email Address</label>\n    <input\n      id="email"\n      type="email"\n      required\n      aria-describedby="email-error"\n    />\n    <div id="email-error" role="alert">\n      {error && <span>{error}</span>}\n    </div>\n  </form>\n);'))),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Security Best Practices"),s().createElement("div",{className:"bg-red-50 p-6 rounded-lg mb-4"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"1. Avoid Dangerous HTML"),s().createElement("div",{className:"grid md:grid-cols-2 gap-4"},s().createElement("div",{className:"bg-green-100 p-4 rounded-lg"},s().createElement("h4",{className:"font-semibold text-green-800 mb-2"},"✅ Safe"),s().createElement("pre",{className:"bg-white p-3 rounded text-sm"},"// React automatically escapes\nconst SafeComponent = ({ userInput }) => (\n  <div>{userInput}</div>\n);\n\n// Use a sanitization library\nimport DOMPurify from 'dompurify';\n\nconst SafeHTML = ({ html }) => (\n  <div dangerouslySetInnerHTML={{\n    __html: DOMPurify.sanitize(html)\n  }} />\n);")),s().createElement("div",{className:"bg-red-100 p-4 rounded-lg"},s().createElement("h4",{className:"font-semibold text-red-800 mb-2"},"❌ Dangerous"),s().createElement("pre",{className:"bg-white p-3 rounded text-sm"},"// Never trust user input directly\nconst DangerousComponent = ({ userInput }) => (\n  <div dangerouslySetInnerHTML={{\n    __html: userInput\n  }} />\n);")))),s().createElement("div",{className:"bg-red-50 p-6 rounded-lg"},s().createElement("h3",{className:"text-xl font-semibold mb-3"},"2. Environment Variables"),s().createElement("pre",{className:"bg-white p-4 rounded border text-sm overflow-x-auto"},"// .env\nREACT_APP_API_URL=https://api.example.com\nREACT_APP_VERSION=1.0.0\n\n// Don't expose sensitive data\n// ❌ Wrong: API_SECRET_KEY=secret123\n// ✅ Right: Keep secrets on the server\n\n// Usage\nconst apiUrl = process.env.REACT_APP_API_URL;\nconst version = process.env.REACT_APP_VERSION;"))),s().createElement("section",{className:"mb-8"},s().createElement("h2",{className:"text-2xl font-semibold text-gray-700 mb-4"},"Summary Checklist"),s().createElement("div",{className:"bg-gray-50 p-6 rounded-lg"},s().createElement("div",{className:"grid md:grid-cols-2 gap-6"},s().createElement("div",null,s().createElement("h3",{className:"text-lg font-semibold mb-3"},"Code Quality"),s().createElement("ul",{className:"space-y-2 text-sm"},s().createElement("li",{className:"flex items-center"},s().createElement("span",{className:"text-green-600 mr-2"},"✓"),"Use PascalCase for components"),s().createElement("li",{className:"flex items-center"},s().createElement("span",{className:"text-green-600 mr-2"},"✓"),"Keep components small and focused"),s().createElement("li",{className:"flex items-center"},s().createElement("span",{className:"text-green-600 mr-2"},"✓"),"Use TypeScript for type safety"),s().createElement("li",{className:"flex items-center"},s().createElement("span",{className:"text-green-600 mr-2"},"✓"),"Set up ESLint and Prettier"),s().createElement("li",{className:"flex items-center"},s().createElement("span",{className:"text-green-600 mr-2"},"✓"),"Write unit tests"))),s().createElement("div",null,s().createElement("h3",{className:"text-lg font-semibold mb-3"},"Performance"),s().createElement("ul",{className:"space-y-2 text-sm"},s().createElement("li",{className:"flex items-center"},s().createElement("span",{className:"text-green-600 mr-2"},"✓"),"Use React.memo for expensive components"),s().createElement("li",{className:"flex items-center"},s().createElement("span",{className:"text-green-600 mr-2"},"✓"),"Implement lazy loading"),s().createElement("li",{className:"flex items-center"},s().createElement("span",{className:"text-green-600 mr-2"},"✓"),"Optimize bundle size"),s().createElement("li",{className:"flex items-center"},s().createElement("span",{className:"text-green-600 mr-2"},"✓"),"Use useMemo and useCallback wisely"),s().createElement("li",{className:"flex items-center"},s().createElement("span",{className:"text-green-600 mr-2"},"✓"),"Virtualize large lists")))))),s().createElement("div",{className:"mt-12 flex justify-between items-center"},s().createElement(l.N_,{to:"/react-course/debugging",className:"text-blue-600 hover:text-blue-800 transition-colors"},"← Previous: Debugging"),s().createElement(l.N_,{to:"/react-course",className:"bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors"},"Complete Course 🎉")))}}]);